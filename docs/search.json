[
  {
    "objectID": "index.html#entrenamiento-de-r",
    "href": "index.html#entrenamiento-de-r",
    "title": "Entrenamiento de R",
    "section": "Entrenamiento de R",
    "text": "Entrenamiento de R\n\nDatos utilizados y proyecto\nLo puedes descargar de acá"
  },
  {
    "objectID": "index.html#facilitadora",
    "href": "index.html#facilitadora",
    "title": "Entrenamiento de R",
    "section": "Facilitadora",
    "text": "Facilitadora\n\nAna Ruth Escoto Castillo\nProfesora de tiempo completo en la Facultad de Ciencias Políticas y Sociales, UNAM. Doctora en Estudios de Población por El Colegio de México, cuenta con el nivel I en el Sistema Nacional de Investigadores. Coorganizadora del capítulo de la CDMX de la iniciativa global Rladies. Le interesa el bienestar de la población, en el presente, analizando los procesos de desigualdad y exclusión en los mercados laborales latinoamericanos; y, en el futuro, a través del estudio de la sustentabilidad. Su experiencia en el ámbito académico se ha concentrado en el estudio de este bienestar, específicamente en el análisis sociodemográfico de las condiciones laborales y la vinculación del comercio exterior con el mercado de trabajo, en la relación del cambio climático y la distribución de ingresos, el consumo energético de los hogares y sus implicaciones ambientales. Posee experiencia en recolección de información estadística, diseño y control de procesos de recolección y su procesamiento. Ha aplicado diversos métodos y herramientas multivariadas, homologación de información y comparabilidad de fuentes en sus investigaciones, así como usa de diversos softwares estadísticos, y ha impartido clases de estadítica aplicada a nivel de licenciatura y posgrado."
  },
  {
    "objectID": "instala.html#introducción-a-r",
    "href": "instala.html#introducción-a-r",
    "title": "Instalación de R y Rstudio",
    "section": "Introducción a R",
    "text": "Introducción a R"
  },
  {
    "objectID": "instala.html#instalación-en-os",
    "href": "instala.html#instalación-en-os",
    "title": "Instalación de R y Rstudio",
    "section": "Instalación en OS",
    "text": "Instalación en OS\n\nNecesito que instalen la versión más nueva de R: Download R-4.4.0 of MAC. The R-project for statistical computing. https://cran.r-project.org/bin/macosx/\n\nElije la versión de acuerdo a tu procesador, intel o ARM.\n\nInstalar también las herramientas Quartz, xcode y fortran\n\n\nhttps://www.xquartz.org/\nhttps://developer.apple.com/xcode/resources/\nhttps://mac.r-project.org/tools/gfortran-12.2-universal.pkg\n\n\nDespués de eso instalar el Rstudio, que hoy se encuentra alojado en el sitio posit, que vaya acorde con MAC\n\nhttps://posit.co/download/rstudio-desktop/\nAlgunas indicaciones en video, pero son algo viejitas y pueden cambiar las versiones de R.\n\nAlgunas indicaciones en video, pero son algo viejitas y pueden cambiar las versiones de R."
  },
  {
    "objectID": "instala.html#instalación-en-pc",
    "href": "instala.html#instalación-en-pc",
    "title": "Instalación de R y Rstudio",
    "section": "Instalación en PC",
    "text": "Instalación en PC\n\nNecesito que instalen la versión más nueva de R: Download R-4.4.0 for Windows. The R-project for statistical computing. https://cran.r-project.org/bin/windows/base/\nInstalar también la herramienta RTools https://cran.r-project.org/bin/windows/Rtools/rtools44/rtools.html\nDespués de eso instalar el Rstudio, que hoy se encuentra alojado en el sitio posit, que vaya acorde con Windows https://posit.co/download/rstudio-desktop/\n\nAlgunas indicaciones en video, pero son algo viejitas y pueden cambiar las versiones de R."
  },
  {
    "objectID": "instala.html#ojo",
    "href": "instala.html#ojo",
    "title": "Instalación de R y Rstudio",
    "section": "Ojo",
    "text": "Ojo\nDesde octubre de 2022, RStudio se volvió “Posit”"
  },
  {
    "objectID": "P1.html#introducción",
    "href": "P1.html#introducción",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.1 Introducción",
    "text": "1.1 Introducción\nEn RStudio podemos tener varias ventanas que nos permiten tener más control de nuestro “ambiente”, el historial, los “scripts” o códigos que escribimos y por supuesto, tenemos nuestra consola, que también tiene el símbolo “&gt;” con R. Podemos pedir operaciones básicas\n\n2+5\n\n[1] 7\n\n5*3\n\n[1] 15\n\n#Para escribir comentarios y que no los lea como operaciones ponemos el símbolo de gato\n# Lo podemos hacer para un comentario en una línea o la par de una instrucción\n\n1:5               # Secuencia 1-5\n\n[1] 1 2 3 4 5\n\nseq(1, 10, 0.5)   # Secuencia con incrementos diferentes a 1\n\n [1]  1.0  1.5  2.0  2.5  3.0  3.5  4.0  4.5  5.0  5.5  6.0  6.5  7.0  7.5  8.0\n[16]  8.5  9.0  9.5 10.0\n\nc('a','b','c')  # Vector con caracteres\n\n[1] \"a\" \"b\" \"c\"\n\n1:7             # Entero\n\n[1] 1 2 3 4 5 6 7\n\n40 &lt; 80         # Valor logico\n\n[1] TRUE\n\n2 + 2 == 5      # Valor logico\n\n[1] FALSE\n\nT == TRUE       # T expresion corta de verdadero\n\n[1] TRUE\n\n\nR es un lenguaje de programación por objetos. Por lo cual vamos a tener objetos a los que se les asigna su contenido. Si usamos una flechita “&lt;-” o “-&gt;” le estamos asignando algo al objeto que apunta la felcha.\n\nx &lt;- 24         # Asignacion de valor 24 a la variable x para su uso posterior (OBJETO)\nx/2             # Uso posterior de variable u objeto x\n\n[1] 12\n\nx               # Imprime en pantalla el valor de la variable u objeto\n\n[1] 24\n\nx &lt;- TRUE       # Asigna el valor logico TRUE a la variable x OJO: x toma el ultimo valor que se le asigna\nx\n\n[1] TRUE"
  },
  {
    "objectID": "P1.html#vectores",
    "href": "P1.html#vectores",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.2 Vectores",
    "text": "1.2 Vectores\nLos vectores son uno de los objetos más usados en R.\n\ny &lt;- c(2, 4, 6)     # Vector numerico\ny &lt;- c('Primaria', 'Secundaria') # Vector caracteres\n\nDado que poseen elementos, podemos también observar y hacer operaciones con sus elementos, usando “[ ]” para acceder a ellos\n\ny[2]              # Acceder al segundo valor del vector y\n\n[1] \"Secundaria\"\n\ny[3] &lt;- 'Preparatoria y más' # Asigna valor a la tercera componente del vector\nsex &lt;-1:2         # Asigna a la variable sex los valores 1 y 2\nnames(sex) &lt;- c(\"Femenino\", \"Masculino\") # Asigna nombres al vector de elementos sexo\nsex[2]            # Segundo elemento del vector sex\n\nMasculino \n        2"
  },
  {
    "objectID": "P1.html#matrices",
    "href": "P1.html#matrices",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.3 Matrices",
    "text": "1.3 Matrices\nLas matrices son muy importantes, porque nos permiten hacer operaciones y casi todas nuestras bases de datos tendran un aspecto de matriz.\n\nm &lt;- matrix (nrow=2, ncol=3, 1:6, byrow = TRUE) # Matrices Ejemplo 1\nm\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n\nm &lt;- matrix (nrow=2, ncol=3, 1:6, byrow = FALSE) # Matrices Ejemplo 1\nm\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\ndim(m)\n\n[1] 2 3\n\nattributes(m)\n\n$dim\n[1] 2 3\n\n\n¿Qué hace “byrow”?\n\nn &lt;- 1:6     # Matrices Ejemplo 2\ndim(n) &lt;- c(2,3)\nn\n\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n\n\nxx &lt;-10:12   # Matrices Ejemplo 3\nyy&lt;-14:16\ncbind(xx,yy) # Une vectores por Columnas\n\n     xx yy\n[1,] 10 14\n[2,] 11 15\n[3,] 12 16\n\nrbind(xx,yy) # Une vectores por Renglones\n\n   [,1] [,2] [,3]\nxx   10   11   12\nyy   14   15   16\n\nmi_matrix&lt;-cbind(xx,yy) # este resultado lo puedo asignar a un objeto"
  },
  {
    "objectID": "P1.html#data.frames-o-conjuntos-de-datos",
    "href": "P1.html#data.frames-o-conjuntos-de-datos",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.4 data.frames o conjuntos de datos",
    "text": "1.4 data.frames o conjuntos de datos\n\nmi_dataframe&lt;-as.data.frame(m)\n\nEl formato matricial sigue sirviendo:\n\nmi_dataframe[2,]\n\n  V1 V2 V3\n2  2  4  6\n\nmi_dataframe[,2]\n\n[1] 3 4\n\n\nPero también podemos utilizar el símbolo de peso para cada variable:\n\nmi_dataframe$V2\n\n[1] 3 4\n\n\nPuedo agregar variables columnas:\n\ncbind(mi_dataframe, c(\"a\", \"b\"), c(T, F))\n\n  V1 V2 V3 c(\"a\", \"b\") c(T, F)\n1  1  3  5           a    TRUE\n2  2  4  6           b   FALSE\n\n\nQué pasa con las matrices\n\ncbind(m, c(\"a\", \"b\"),  c(T, F))\n\n     [,1] [,2] [,3] [,4] [,5]   \n[1,] \"1\"  \"3\"  \"5\"  \"a\"  \"TRUE\" \n[2,] \"2\"  \"4\"  \"6\"  \"b\"  \"FALSE\"\n\n\nCheca cómo cambian los elementos. En una matriz todos los elementos deben ser del mismo tipo.\nPodemos crear “a mano” dataframes:\n\ndata&lt;-data.frame(\n  \"entero\" = 1:4, \n  \"factor\" = as.factor(c(\"a\", \"b\", \"c\", \"d\")), \n  \"numero\" = c(1/1, 1/2, 1/3, 1/4),\n  \"cadena\" = as.character(c(\"a\", \"b\", \"c\", \"d\"))\n)\n\nLos data.frames tienen una estructura\n\nstr(data)\n\n'data.frame':   4 obs. of  4 variables:\n $ entero: int  1 2 3 4\n $ factor: Factor w/ 4 levels \"a\",\"b\",\"c\",\"d\": 1 2 3 4\n $ numero: num  1 0.5 0.333 0.25\n $ cadena: chr  \"a\" \"b\" \"c\" \"d\""
  },
  {
    "objectID": "P1.html#valores-y-perdidos",
    "href": "P1.html#valores-y-perdidos",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.5 Valores y perdidos",
    "text": "1.5 Valores y perdidos\nAdemás de caracteres, numéricos y lógicos hay también valores perdidos. Y de varios tipos\n\nvector&lt;-c(1:5, # numérico\n          T, # lógico\n          NA, # perdido\n          \"a\", # caracter\n          5/0, # no es un número\n          sqrt(-1))\n\nWarning in sqrt(-1): Se han producido NaNs\n\n\nSi lo imprimimos vamos a ir viendo cómo se convierten ciertos valores a otros al quererlos incluir en un mismo conjunto:\n\nvector\n\n [1] \"1\"    \"2\"    \"3\"    \"4\"    \"5\"    \"TRUE\" NA     \"a\"    \"Inf\"  \"NaN\" \n\n\nQuitaremos el caracter\n\nvector&lt;-c(1:5, # numérico\n          T, # lógico\n          NA, # perdido\n          5/0, # Infinito\n          sqrt(-1))\n\nWarning in sqrt(-1): Se han producido NaNs\n\nvector\n\n[1]   1   2   3   4   5   1  NA Inf NaN\n\n\n¿Qué le pasó al valor lógico?\nHay unos operadores que nos señalan si los valores son perdidos o infinitos o “Not a number”\n\nis.na(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE\n\nis.nan(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE\n\nis.infinite(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE"
  },
  {
    "objectID": "P1.html#funciones",
    "href": "P1.html#funciones",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.6 Funciones",
    "text": "1.6 Funciones\nAlgunas funciones básicas son las siguientes. Vamos a ir viendo más funciones, pero para entender cómo funcionan, haremos unos ejemplos y cómo pedir ayuda sobre ellas.\n\nsum(10, 20, 30)    # Función suma\n\n[1] 60\n\nrep('R', times = 3) # Repite la letra R el numero de veces que se indica\n\n[1] \"R\" \"R\" \"R\"\n\nsqrt(9)           # Raiz cuadrada de 9\n\n[1] 3"
  },
  {
    "objectID": "P1.html#listas",
    "href": "P1.html#listas",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.7 Listas",
    "text": "1.7 Listas\nLas listas son conjuntos de objetos y pueden ser de varios tipos\n\nmilista&lt;- list(data, m, xx, \"a\")\n\n\nmilista\n\n[[1]]\n  entero factor    numero cadena\n1      1      a 1.0000000      a\n2      2      b 0.5000000      b\n3      3      c 0.3333333      c\n4      4      d 0.2500000      d\n\n[[2]]\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n[[3]]\n[1] 10 11 12\n\n[[4]]\n[1] \"a\"\n\n\nOjo con los corchetes\n\nmilista[[1]]\n\n  entero factor    numero cadena\n1      1      a 1.0000000      a\n2      2      b 0.5000000      b\n3      3      c 0.3333333      c\n4      4      d 0.2500000      d\n\n\nSi queremos ponerle nombres a los elementos\n\nmilista&lt;- list(datos = data, \n               matriz = m, \n               vector = xx,\n               valor = \"a\")\n\nmilista\n\n$datos\n  entero factor    numero cadena\n1      1      a 1.0000000      a\n2      2      b 0.5000000      b\n3      3      c 0.3333333      c\n4      4      d 0.2500000      d\n\n$matriz\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n\n$vector\n[1] 10 11 12\n\n$valor\n[1] \"a\""
  },
  {
    "objectID": "P1.html#ayuda",
    "href": "P1.html#ayuda",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.8 Ayuda",
    "text": "1.8 Ayuda\nPedir ayuda es indispensable para aprender a escribir nuestros códigos. A prueba y error, es el mejor sistema para aprender. Podemos usar la función help, example y ?\n\nhelp(sum)         # Ayuda sobre función sum\nexample(sum)      # Ejemplo de función sum\n\n\nsum&gt; ## Pass a vector to sum, and it will add the elements together.\nsum&gt; sum(1:5)\n[1] 15\n\nsum&gt; ## Pass several numbers to sum, and it also adds the elements.\nsum&gt; sum(1, 2, 3, 4, 5)\n[1] 15\n\nsum&gt; ## In fact, you can pass vectors into several arguments, and everything gets added.\nsum&gt; sum(1:2, 3:5)\n[1] 15\n\nsum&gt; ## If there are missing values, the sum is unknown, i.e., also missing, ....\nsum&gt; sum(1:5, NA)\n[1] NA\n\nsum&gt; ## ... unless  we exclude missing values explicitly:\nsum&gt; sum(1:5, NA, na.rm = TRUE)\n[1] 15"
  },
  {
    "objectID": "P1.html#mi-ambiente",
    "href": "P1.html#mi-ambiente",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.9 Mi ambiente",
    "text": "1.9 Mi ambiente\nTodos los objetos que hemos declarado hasta ahora son parte de nuestro “ambiente” (environment). Para saber qué está en nuestro ambiente usamos el comando\n\nls()\n\n [1] \"data\"            \"has_annotations\" \"m\"               \"mi_dataframe\"   \n [5] \"mi_matrix\"       \"milista\"         \"n\"               \"pandoc_dir\"     \n [9] \"quarto_bin_path\" \"sex\"             \"vector\"          \"x\"              \n[13] \"xx\"              \"y\"               \"yy\"             \n\ngc()           # Garbage collection, reporta memoria en uso\n\n          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)\nNcells  642215 34.3    1353604 72.3         NA  1353604 72.3\nVcells 1204919  9.2    8388608 64.0      16384  2168147 16.6\n\n\nPara borrar todos nuestros objetos, usamos el siguiente comando, que equivale a usar la escobita de la venta de environment\n\nrm(list=ls())  # Borrar objetos actuales"
  },
  {
    "objectID": "P1.html#directorio-de-trabajo",
    "href": "P1.html#directorio-de-trabajo",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.10 Directorio de trabajo",
    "text": "1.10 Directorio de trabajo\nEs muy útil saber dónde estamos trabajando y donde queremos trabajar. Por eso podemos utilizar los siguientes comandos para saberlo\nOjo, checa, si estás desdes una PC, cómo cambian las “” por”/” o por “\\”\n\ngetwd()           # Directorio actual\n\n[1] \"/Users/anaescoto/Dropbox/2024/r_fe\"\n\n#setwd(\"\")# Cambio de directorio\n\nlist.files()      # Lista de archivos en ese directorio\n\n [1] \"EDA.R\"                                                      \n [2] \"LICENSE\"                                                    \n [3] \"Mi_Exportación.xlsx\"                                        \n [4] \"P1.qmd\"                                                     \n [5] \"P1.rmarkdown\"                                               \n [6] \"P2.qmd\"                                                     \n [7] \"P3.qmd\"                                                     \n [8] \"P4.qmd\"                                                     \n [9] \"P5.html\"                                                    \n[10] \"P5.qmd\"                                                     \n[11] \"P5_files\"                                                   \n[12] \"README.md\"                                                  \n[13] \"_quarto.yml\"                                                \n[14] \"dataMaid_dplyr__select_ejemplo_csv__starts_with__P4___.Rmd\" \n[15] \"dataMaid_dplyr__select_ejemplo_csv__starts_with__P4___.html\"\n[16] \"dataMaid_ejemplo_csv.Rmd\"                                   \n[17] \"dataMaid_ejemplo_csv.html\"                                  \n[18] \"datos\"                                                      \n[19] \"docs\"                                                       \n[20] \"index.html\"                                                 \n[21] \"index.qmd\"                                                  \n[22] \"instala.html\"                                               \n[23] \"instala.qmd\"                                                \n[24] \"pib_pm.png\"                                                 \n[25] \"r_fe.Rproj\"                                                 \n[26] \"r_fe3\"                                                      \n[27] \"report.html\"                                                \n[28] \"site_libs\"                                                  \n[29] \"tokens.R\"                                                   \n[30] \"videos.qmd\"                                                 \n\n\nChecar que esto también se puede hacer desde el menú:\n\n\n\ni0"
  },
  {
    "objectID": "P1.html#proyectos",
    "href": "P1.html#proyectos",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.11 Proyectos",
    "text": "1.11 Proyectos\nPero… a veces preferimos trabajar en proyectos, sobre todo porque nos da más control.\nHay gente que lo dice mejor que yo, como Hadley Wickham: https://es.r4ds.hadley.nz/flujo-de-trabajo-proyectos.html"
  },
  {
    "objectID": "P1.html#instalación-de-paquetes",
    "href": "P1.html#instalación-de-paquetes",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.12 Instalación de paquetes",
    "text": "1.12 Instalación de paquetes\nLos paquetes son útiles para realizar funciones especiales. La especialización de paquetes es más rápida en R que en otros programas por ser software libre.\nVamos a instalar el paquete {foreign}, como su nombre lo indica, nos permite leer elementos “extranjeros” en R.\nPara instalar las paqueterías usamos el siguiente comando install.packages() Checa que adentro del paréntesis va el nombre de la librería, con comillas.\nVamos a instalar dos librerías que nos permiten importar formatos.\n\n#install.packages(\"foreign\", dependencies = TRUE)\n#install.packages(\"haven\", dependencies = TRUE)\n\nEste proceso no hay que hacerlo siempre. Si no sólo la primera vez. Una vez instalado un paquete de librería, la llamamos con el comando “library”\n\nlibrary(haven)\nlibrary(foreign)\n\n{foreing} nos permite leer archivos en formato de dBase, con extensión “.dbf”. Si bien no es un formato muy común para los investigadores, sí para los que generan la información, puesto que dBase es uno de los principales programas de administración de bases de datos.\nHe puesto un ejemplo de una base de datos mexicana en dbf, en este formato.\n\nejemplo_dbf&lt;-foreign::read.dbf(\"datos/ejemplo_dbf.DBF\") #checa cómo nos vamos adentro de nuestro directorio\n\nLos :: sirven para tres cosas:\n\ncargar un comando de un paquete, sin haberlo cargado\npara identificar de qué paquete viene el comando.\npara especificar en caso que hayan dos comandos iguales en un paquete, usar el que tenemos de los paquetes."
  },
  {
    "objectID": "P1.html#paquete-pacman",
    "href": "P1.html#paquete-pacman",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.13 Paquete {pacman}",
    "text": "1.13 Paquete {pacman}\nEn general, cuando hacemos nuestro código querremos verificar que nuestras librerías estén instaladas. Si actualizamos nuestro R y Rstudio es probable (sobre todo en MAC) que hayamos perdido alguno.\nEste es un ejemplo de un código. Y vamos a introducir un paquete muy útil llamado {pacman}\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse, readxl, writexl, haven, sjlabelled, foreign) #carga los paquetes necesarios para esta práctica\n\nHay muchos formatos de almacenamiento de bases de datos. Vamos a aprender a importar información desde ellos."
  },
  {
    "objectID": "P1.html#estilos",
    "href": "P1.html#estilos",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.14 Estilos",
    "text": "1.14 Estilos\nEscribir código tiene su gramática. Por lo general en este curso seguiremos el estilo de Google\nhttps://google.github.io/styleguide/Rguide.html"
  },
  {
    "objectID": "P1.html#ejercicio-1",
    "href": "P1.html#ejercicio-1",
    "title": "1  Primer acercamiento al uso del programa",
    "section": "1.15 Ejercicio 1",
    "text": "1.15 Ejercicio 1\nRealice en un nuevo script lo siguiente:\n\nEscriba un vector “x”, con los elementos 2,3,7,9. Muestre el resultado\nEscriba un vector “y”, con los elementos 9, 7, 3, 2. Muestre el resultado\nEscriba un vector “year” con los años que van desde 1990 a 1993. Muestre el resultado\nEscriba un vector “name” con los nombres de 4 de sus compañeros de curso. Muestre el resultado\nCree una matrix “m” 2x4 que incluya los valores 101 a 108, que se ordene según fila\n¿Cuáles son las dimensiones de la matriz “m”?\nCree una matriz “m2” juntado los vectores “x” y “y”, por sus filas ¿Cuáles son las dimensiones de la matriz “m2”?\nConvierta esa matriz en un data.frame\nEscriba una lista\n\nEntregue su resultado en este formulario"
  },
  {
    "objectID": "P2.html",
    "href": "P2.html",
    "title": "2  Importación de conjuntos de datos",
    "section": "",
    "text": "3 Ejercicio\nEnvíe el script utilizado al formulario"
  },
  {
    "objectID": "P2.html#consejo-para-escribir-código",
    "href": "P2.html#consejo-para-escribir-código",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.1 Consejo para escribir “código””",
    "text": "2.1 Consejo para escribir “código””\nEn general, cuando hacemos nuestro código querremos verificar que nuestras librerías estén instaladas. Si actualizamos nuestro R y Rstudio es probable que hayamos perdido alguno.\nEste es un ejemplo de un código. Y vamos a introducir un paquete muy útil llamado {pacman}\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse, \n               readxl,writexl,googlesheets4, # importar hojas de cálculo\n               haven, foreign, # importación de dta y sab\n               sjlabelled, # etiquetas\n               janitor, skimr, #carga los paquetes necesarios para esta práctica\n               curl) # para que lea urls"
  },
  {
    "objectID": "P2.html#vamos-a-trabajar-con-el-proyecto",
    "href": "P2.html#vamos-a-trabajar-con-el-proyecto",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.2 Vamos a trabajar con el proyecto",
    "text": "2.2 Vamos a trabajar con el proyecto\nDescarguemos algunos ejemplos de información, aquí un par de ejemplo de algunos formatos."
  },
  {
    "objectID": "P2.html#importación-de-datos",
    "href": "P2.html#importación-de-datos",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.3 Importación de datos",
    "text": "2.3 Importación de datos\n\n2.3.1 Desde Excel\nEl paquete más compatible con RStudio es readxl. A veces, otros paquetes tienen más problemas de configuración entre R y el Java.\n\nejemploxl &lt;- readxl::read_excel(\"datos/ejemplo_xlsx.xlsx\", sheet = \"para_importar\")\n\nNew names:\n• `` -&gt; `...128`\n• `` -&gt; `...129`\n• `` -&gt; `...132`\n• `PIB (Paridad de Poder Adquisitivo)` -&gt; `PIB (Paridad de Poder\n  Adquisitivo)...135`\n• `PIB (Paridad de Poder Adquisitivo)` -&gt; `PIB (Paridad de Poder\n  Adquisitivo)...136`\n• `PIB per cápita (Paridad de Poder Adquisitivo)` -&gt; `PIB per cápita (Paridad\n  de Poder Adquisitivo)...137`\n• `PIB per cápita (Paridad de Poder Adquisitivo)` -&gt; `PIB per cápita (Paridad\n  de Poder Adquisitivo)...138`\n• `PIB per cápita` -&gt; `PIB per cápita...139`\n• `PIB per cápita` -&gt; `PIB per cápita...140`\n• `PIB` -&gt; `PIB...141`\n• `PIB` -&gt; `PIB...142`\n\n\nComo el nombre de paquete lo indica, sólo lee. Para escribir en este formato, recomiendo el paquete “writexl”. Lo instalamos anteriormente.\nSi quisiéramos exportar un objeto a Excel\n\nwritexl::write_xlsx(ejemploxl, path = \"Mi_Exportación.xlsx\")\n\n\n\n2.3.2 Desde STATA y SPSS\nSi bien también se puede realizar desde el paquete {foreign}. Pero este no importa algunas características como las etiquetas y tampoco funciona con las versiones más nuevas de STATA. Vamos a instalar otro paquete, compatible con el mundo tidyverse.\nRecuerda que no hay que instalarlo (viene adentro de tidyverse).\n\nconcentradohogar &lt;- haven::read_dta(\"datos/concentradohogar.dta\")\n\n!Importante, a R no le gustan los objetos con nombres que empiezan en números\nEl paquete haven sí exporta información.\n\nhaven::write_dta(concentradohogar, \"datos/mi_exportacion.dta\", version = 12)\n\nCon SSPS es muy parecido. Dentro de “haven” hay una función específica para ello.\n\ningresos&lt;- haven::read_sav(\"datos/ingresos.sav\")\n\nPara escribir\n\n#haven::write_sav(concentradohogar , \"mi_exportacion.sav\")\n\nCheca que en todas las exportaciones en los nombres hay que incluir la extensión del programa. Si quieres guardar en un lugar diferente al directorio del trabajo, hay que escribir toda la ruta dentro de la computadora."
  },
  {
    "objectID": "P2.html#desde-.dbf",
    "href": "P2.html#desde-.dbf",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.4 Desde .dbf",
    "text": "2.4 Desde .dbf\n{foreing} nos permite leer archivos en formato de dBase, con extensión “.dbf”. Si bien no es un formato muy común para los investigadores, sí para los que generan la información, puesto que dBase es uno de los principales programas de administración de bases de datos.\nHe puesto un ejemplo de una base de datos mexicana en dbf, en este formato.\n\nejemplo_dbf&lt;-foreign::read.dbf(\"datos/ejemplo_dbf.DBF\") #checa cómo nos vamos adentro de nuestro directorio"
  },
  {
    "objectID": "P2.html#revisión-de-nuestro-data.frame",
    "href": "P2.html#revisión-de-nuestro-data.frame",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.5 Revisión de nuestro data.frame",
    "text": "2.5 Revisión de nuestro data.frame\nVamos a revisar la data.frame,\n\nclass(concentradohogar) # tipo de objeto\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nnames(concentradohogar) # lista las variables\n\n  [1] \"folioviv\"   \"foliohog\"   \"ubica_geo\"  \"tam_loc\"    \"est_socio\" \n  [6] \"est_dis\"    \"upm\"        \"factor\"     \"clase_hog\"  \"sexo_jefe\" \n [11] \"edad_jefe\"  \"educa_jefe\" \"tot_integ\"  \"hombres\"    \"mujeres\"   \n [16] \"mayores\"    \"menores\"    \"p12_64\"     \"p65mas\"     \"ocupados\"  \n [21] \"percep_ing\" \"perc_ocupa\" \"ing_cor\"    \"ingtrab\"    \"trabajo\"   \n [26] \"sueldos\"    \"horas_extr\" \"comisiones\" \"aguinaldo\"  \"indemtrab\" \n [31] \"otra_rem\"   \"remu_espec\" \"negocio\"    \"noagrop\"    \"industria\" \n [36] \"comercio\"   \"servicios\"  \"agrope\"     \"agricolas\"  \"pecuarios\" \n [41] \"reproducc\"  \"pesca\"      \"otros_trab\" \"rentas\"     \"utilidad\"  \n [46] \"arrenda\"    \"transfer\"   \"jubilacion\" \"becas\"      \"donativos\" \n [51] \"remesas\"    \"bene_gob\"   \"transf_hog\" \"trans_inst\" \"estim_alqu\"\n [56] \"otros_ing\"  \"gasto_mon\"  \"alimentos\"  \"ali_dentro\" \"cereales\"  \n [61] \"carnes\"     \"pescado\"    \"leche\"      \"huevo\"      \"aceites\"   \n [66] \"tuberculo\"  \"verduras\"   \"frutas\"     \"azucar\"     \"cafe\"      \n [71] \"especias\"   \"otros_alim\" \"bebidas\"    \"ali_fuera\"  \"tabaco\"    \n [76] \"vesti_calz\" \"vestido\"    \"calzado\"    \"vivienda\"   \"alquiler\"  \n [81] \"pred_cons\"  \"agua\"       \"energia\"    \"limpieza\"   \"cuidados\"  \n [86] \"utensilios\" \"enseres\"    \"salud\"      \"atenc_ambu\" \"hospital\"  \n [91] \"medicinas\"  \"transporte\" \"publico\"    \"foraneo\"    \"adqui_vehi\"\n [96] \"mantenim\"   \"refaccion\"  \"combus\"     \"comunica\"   \"educa_espa\"\n[101] \"educacion\"  \"esparci\"    \"paq_turist\" \"personales\" \"cuida_pers\"\n[106] \"acces_pers\" \"otros_gas\"  \"transf_gas\" \"percep_tot\" \"retiro_inv\"\n[111] \"prestamos\"  \"otras_perc\" \"ero_nm_viv\" \"ero_nm_hog\" \"erogac_tot\"\n[116] \"cuota_viv\"  \"mater_serv\" \"material\"   \"servicio\"   \"deposito\"  \n[121] \"prest_terc\" \"pago_tarje\" \"deudas\"     \"balance\"    \"otras_erog\"\n[126] \"smg\"       \n\nhead(concentradohogar) # muestra las primeras 6 líneas\n\n# A tibble: 6 × 126\n  folioviv   foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n  &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;    \n1 0100005002 1        01001     1       4         003     0000…    206 3        \n2 0100005003 1        01001     1       4         003     0000…    206 2        \n3 0100005004 1        01001     1       4         003     0000…    206 2        \n4 0100012002 1        01001     1       3         002     0000…    167 3        \n5 0100012002 2        01001     1       3         002     0000…    167 1        \n6 0100012004 1        01001     1       3         002     0000…    167 2        \n# ℹ 117 more variables: sexo_jefe &lt;chr&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;chr&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;,\n#   negocio &lt;dbl&gt;, noagrop &lt;dbl&gt;, industria &lt;dbl&gt;, comercio &lt;dbl&gt;, …\n\ntable(concentradohogar$clase_hog) # un tabulado simple\n\n\n    1     2     3     4     5 \n11886 55540 21786   583   307"
  },
  {
    "objectID": "P2.html#revisión-con-dplyr",
    "href": "P2.html#revisión-con-dplyr",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.6 Revisión con dplyr",
    "text": "2.6 Revisión con dplyr\nOperador de “pipe” o “tubería” %&gt;% (Ctrl+Shift+M) Antes de continuar, presentemos el operador “pipe” %&gt;%. dplyr importa este operador de otro paquete (magrittr). Este operador le permite canalizar la salida de una función a la entrada de otra función. En lugar de funciones de anidamiento (lectura desde adentro hacia afuera), la idea de la tubería es leer las funciones de izquierda a derecha.\n\nconcentradohogar %&gt;% \n    dplyr::select(sexo_jefe, edad_jefe) %&gt;% \n    head\n\n# A tibble: 6 × 2\n  sexo_jefe edad_jefe\n  &lt;chr&gt;         &lt;dbl&gt;\n1 2                91\n2 1                68\n3 1                56\n4 1                87\n5 1                27\n6 1                57\n\n\n\nconcentradohogar %&gt;% \n    dplyr::select(sexo_jefe, edad_jefe) %&gt;% \n    glimpse\n\nRows: 90,102\nColumns: 2\n$ sexo_jefe &lt;chr&gt; \"2\", \"1\", \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"1\", \"1\", \"1\", …\n$ edad_jefe &lt;dbl&gt; 91, 68, 56, 87, 27, 57, 47, 75, 70, 69, 48, 73, 64, 55, 58, …\n\n\n\n2.6.1 Ojeando\n\ndplyr::glimpse(concentradohogar)\n\nRows: 90,102\nColumns: 126\n$ folioviv   &lt;chr&gt; \"0100005002\", \"0100005003\", \"0100005004\", \"0100012002\", \"01…\n$ foliohog   &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"2\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ ubica_geo  &lt;chr&gt; \"01001\", \"01001\", \"01001\", \"01001\", \"01001\", \"01001\", \"0100…\n$ tam_loc    &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ est_socio  &lt;chr&gt; \"4\", \"4\", \"4\", \"3\", \"3\", \"3\", \"3\", \"4\", \"4\", \"4\", \"4\", \"3\",…\n$ est_dis    &lt;chr&gt; \"003\", \"003\", \"003\", \"002\", \"002\", \"002\", \"002\", \"003\", \"00…\n$ upm        &lt;chr&gt; \"0000001\", \"0000001\", \"0000001\", \"0000002\", \"0000002\", \"000…\n$ factor     &lt;dbl&gt; 206, 206, 206, 167, 167, 167, 167, 212, 212, 212, 212, 184,…\n$ clase_hog  &lt;chr&gt; \"3\", \"2\", \"2\", \"3\", \"1\", \"2\", \"2\", \"1\", \"2\", \"2\", \"2\", \"1\",…\n$ sexo_jefe  &lt;chr&gt; \"2\", \"1\", \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"1\", \"1\", \"1\",…\n$ edad_jefe  &lt;dbl&gt; 91, 68, 56, 87, 27, 57, 47, 75, 70, 69, 48, 73, 64, 55, 58,…\n$ educa_jefe &lt;chr&gt; \"03\", \"08\", \"10\", \"11\", \"08\", \"08\", \"10\", \"06\", \"10\", \"04\",…\n$ tot_integ  &lt;dbl&gt; 3, 2, 3, 4, 1, 4, 4, 1, 3, 2, 5, 1, 4, 3, 1, 6, 4, 2, 3, 1,…\n$ hombres    &lt;dbl&gt; 0, 1, 2, 2, 1, 2, 2, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 3, 0,…\n$ mujeres    &lt;dbl&gt; 3, 1, 1, 2, 0, 2, 2, 1, 2, 1, 4, 0, 3, 2, 1, 5, 3, 1, 0, 1,…\n$ mayores    &lt;dbl&gt; 3, 2, 3, 4, 1, 3, 4, 1, 3, 2, 5, 1, 4, 2, 1, 4, 4, 2, 1, 1,…\n$ menores    &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 2, 0,…\n$ p12_64     &lt;dbl&gt; 2, 1, 3, 2, 1, 3, 4, 0, 2, 0, 5, 0, 4, 2, 1, 4, 3, 0, 1, 1,…\n$ p65mas     &lt;dbl&gt; 1, 1, 0, 2, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0,…\n$ ocupados   &lt;dbl&gt; 1, 2, 2, 0, 1, 3, 1, 0, 3, 1, 1, 0, 1, 1, 0, 3, 1, 1, 1, 1,…\n$ percep_ing &lt;dbl&gt; 3, 2, 2, 2, 1, 4, 2, 1, 3, 2, 1, 1, 2, 2, 1, 3, 2, 2, 1, 1,…\n$ perc_ocupa &lt;dbl&gt; 1, 2, 2, 0, 1, 3, 1, 0, 3, 1, 1, 0, 1, 1, 0, 3, 1, 1, 1, 1,…\n$ ing_cor    &lt;dbl&gt; 56123.75, 108048.87, 133852.88, 105054.15, 24211.95, 121649…\n$ ingtrab    &lt;dbl&gt; 35706.51, 66766.28, 93081.50, 0.00, 22255.43, 40255.41, 333…\n$ trabajo    &lt;dbl&gt; 35706.51, 66766.28, 51603.24, 0.00, 17364.13, 40255.41, 327…\n$ sueldos    &lt;dbl&gt; 33749.99, 61630.42, 41086.95, 0.00, 17364.13, 36586.94, 246…\n$ horas_extr &lt;dbl&gt; 0.00, 0.00, 978.26, 0.00, 0.00, 0.00, 7092.39, 0.00, 0.00, …\n$ comisiones &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ aguinaldo  &lt;dbl&gt; 1956.52, 4646.73, 5135.86, 0.00, 0.00, 3668.47, 1027.17, 0.…\n$ indemtrab  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ otra_rem   &lt;dbl&gt; 0.00, 489.13, 4402.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, …\n$ remu_espec &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ negocio    &lt;dbl&gt; 0.00, 0.00, 41478.26, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0…\n$ noagrop    &lt;dbl&gt; 0.00, 0.00, 41478.26, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0…\n$ industria  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ comercio   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ servicios  &lt;dbl&gt; 0.00, 0.00, 41478.26, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0…\n$ agrope     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ agricolas  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ pecuarios  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ reproducc  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ pesca      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ otros_trab &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 4891.30, 0.00, 586.95, 0.00, 0.00, …\n$ rentas     &lt;dbl&gt; 0.00, 32282.60, 11739.13, 0.00, 0.00, 72684.78, 0.00, 0.00,…\n$ utilidad   &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 72684.78, 0.00, 0.00, 16007.2…\n$ arrenda    &lt;dbl&gt; 0.00, 32282.60, 11739.13, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ transfer   &lt;dbl&gt; 8804.34, 8999.99, 0.00, 90538.03, 1956.52, 0.00, 26902.17, …\n$ jubilacion &lt;dbl&gt; 0.00, 0.00, 0.00, 79239.13, 0.00, 0.00, 0.00, 73369.56, 440…\n$ becas      &lt;dbl&gt; 391.3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.…\n$ donativos  &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 1956.52, 0.00, 26902.17, 0.00, 0.00…\n$ remesas    &lt;dbl&gt; 978.26, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ bene_gob   &lt;dbl&gt; 7434.78, 0.00, 0.00, 11298.90, 0.00, 0.00, 0.00, 5649.45, 0…\n$ transf_hog &lt;dbl&gt; 0.00, 8999.99, 0.00, 0.00, 0.00, 0.00, 0.00, 2442.84, 0.00,…\n$ trans_inst &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ estim_alqu &lt;dbl&gt; 11612.90, 0.00, 29032.25, 14516.12, 0.00, 8709.67, 0.00, 14…\n$ otros_ing  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ gasto_mon  &lt;dbl&gt; 35091.17, 78670.73, 101647.27, 46702.31, 26927.85, 51176.07…\n$ alimentos  &lt;dbl&gt; 9514.19, 17524.25, 18321.36, 14759.90, 12458.47, 6351.40, 1…\n$ ali_dentro &lt;dbl&gt; 6814.20, 5181.41, 16907.08, 6274.20, 7315.63, 951.42, 11828…\n$ cereales   &lt;dbl&gt; 1465.70, 231.42, 1362.84, 1928.53, 308.56, 617.14, 1915.67,…\n$ carnes     &lt;dbl&gt; 617.14, 4114.28, 5142.85, 1928.57, 2442.84, 0.00, 6685.69, …\n$ pescado    &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 1799.99, 0.00, 1414.28, 0.00, 0.00,…\n$ leche      &lt;dbl&gt; 269.99, 578.57, 0.00, 1414.26, 0.00, 334.28, 0.00, 565.70, …\n$ huevo      &lt;dbl&gt; 0.00, 257.14, 1028.57, 0.00, 321.42, 0.00, 0.00, 0.00, 1002…\n$ aceites    &lt;dbl&gt; 0.00, 0.00, 565.71, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ tuberculo  &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 1028.56, 0.00, 321.42, 621.38, 0.00…\n$ verduras   &lt;dbl&gt; 2288.53, 0.00, 1735.69, 1002.84, 642.85, 0.00, 951.41, 2069…\n$ frutas     &lt;dbl&gt; 1954.27, 0.00, 0.00, 0.00, 0.00, 0.00, 539.99, 1234.27, 195…\n$ azucar     &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ cafe       &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ especias   &lt;dbl&gt; 218.57, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.0…\n$ otros_alim &lt;dbl&gt; 0.00, 0.00, 5142.85, 0.00, 0.00, 0.00, 0.00, 3857.14, 1928.…\n$ bebidas    &lt;dbl&gt; 0.00, 0.00, 1928.57, 0.00, 771.41, 0.00, 0.00, 462.84, 2378…\n$ ali_fuera  &lt;dbl&gt; 2699.99, 12342.84, 1414.28, 8485.70, 5142.84, 5399.98, 5528…\n$ tabaco     &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ vesti_calz &lt;dbl&gt; 2445.64, 684.78, 0.00, 1369.56, 0.00, 1751.06, 9782.60, 489…\n$ vestido    &lt;dbl&gt; 2445.64, 684.78, 0.00, 1369.56, 0.00, 1751.06, 5380.43, 489…\n$ calzado    &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 4402.17, 0.00, 0.00, 0.…\n$ vivienda   &lt;dbl&gt; 1736.75, 29649.66, 3232.25, 2850.00, 2700.00, 3660.00, 1822…\n$ alquiler   &lt;dbl&gt; 0.00, 24677.41, 0.00, 0.00, 0.00, 0.00, 13935.48, 0.00, 0.0…\n$ pred_cons  &lt;dbl&gt; 116.75, 2032.25, 2032.25, 150.00, 0.00, 150.00, 0.00, 750.0…\n$ agua       &lt;dbl&gt; 780, 540, 750, 450, 450, 1200, 1410, 420, 840, 420, 900, 87…\n$ energia    &lt;dbl&gt; 840.00, 2400.00, 450.00, 2250.00, 2250.00, 2310.00, 2876.61…\n$ limpieza   &lt;dbl&gt; 2075.80, 2816.11, 1422.55, 1228.04, 890.36, 3518.67, 2386.3…\n$ cuidados   &lt;dbl&gt; 2075.80, 2816.11, 1422.55, 1228.04, 792.54, 3518.67, 2386.3…\n$ utensilios &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 97.82, 0.00, 0.00, 0.00, 489.13, 23…\n$ enseres    &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ salud      &lt;dbl&gt; 2641.29, 0.00, 0.00, 0.00, 0.00, 1007.60, 8902.16, 3277.16,…\n$ atenc_ambu &lt;dbl&gt; 2641.29, 0.00, 0.00, 0.00, 0.00, 1007.60, 7923.90, 3277.16,…\n$ hospital   &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ medicinas  &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 978.26, 0.00, 978.26, 0…\n$ transporte &lt;dbl&gt; 6773.62, 6706.44, 23312.90, 23574.19, 5080.63, 20601.28, 84…\n$ publico    &lt;dbl&gt; 2314.28, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 771.42, 1157.1…\n$ foraneo    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ adqui_vehi &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ mantenim   &lt;dbl&gt; 2903.22, 4354.83, 11612.90, 20322.58, 4064.51, 17709.67, 53…\n$ refaccion  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ combus     &lt;dbl&gt; 2903.22, 4354.83, 11612.90, 20322.58, 4064.51, 17709.67, 53…\n$ comunica   &lt;dbl&gt; 1556.12, 2351.61, 11700.00, 3251.61, 1016.12, 2891.61, 3033…\n$ educa_espa &lt;dbl&gt; 2903.22, 0.00, 34728.25, 0.00, 4209.66, 6967.74, 9058.05, 0…\n$ educacion  &lt;dbl&gt; 2903.22, 0.00, 0.00, 0.00, 0.00, 6967.74, 6735.47, 0.00, 0.…\n$ esparci    &lt;dbl&gt; 0.00, 0.00, 5380.43, 0.00, 4209.66, 0.00, 2322.58, 0.00, 0.…\n$ paq_turist &lt;dbl&gt; 0.00, 0.00, 29347.82, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0…\n$ personales &lt;dbl&gt; 4097.44, 3870.14, 13416.08, 2920.62, 1344.17, 812.90, 4918.…\n$ cuida_pers &lt;dbl&gt; 673.53, 3745.14, 1916.09, 2920.62, 1344.17, 812.90, 4708.95…\n$ acces_pers &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ otros_gas  &lt;dbl&gt; 3423.91, 125.00, 11499.99, 0.00, 0.00, 0.00, 210.00, 0.00, …\n$ transf_gas &lt;dbl&gt; 2903.22, 17419.35, 7213.88, 0.00, 244.56, 6505.42, 73.36, 4…\n$ percep_tot &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 3214.27, 0.00, 0.00, 0.00, 0.00, 0.…\n$ retiro_inv &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ prestamos  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ otras_perc &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ero_nm_viv &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ero_nm_hog &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 3214.27, 0.00, 0.00, 0.00, 0.00, 0.…\n$ erogac_tot &lt;dbl&gt; 0.00, 19565.21, 0.00, 28124.99, 0.00, 5771.73, 360.97, 2445…\n$ cuota_viv  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ mater_serv &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ material   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ servicio   &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ deposito   &lt;dbl&gt; 0.00, 19565.21, 0.00, 28124.99, 0.00, 5771.73, 0.00, 2445.6…\n$ prest_terc &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ pago_tarje &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ deudas     &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ balance    &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ otras_erog &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 360.97, 0.00, 0.00, 0.0…\n$ smg        &lt;dbl&gt; 15558.3, 15558.3, 15558.3, 15558.3, 15558.3, 15558.3, 15558…\n\ndplyr::glimpse(concentradohogar[,20:30]) # en corchete del lado derecho podemos ojear columnas \n\nRows: 90,102\nColumns: 11\n$ ocupados   &lt;dbl&gt; 1, 2, 2, 0, 1, 3, 1, 0, 3, 1, 1, 0, 1, 1, 0, 3, 1, 1, 1, 1,…\n$ percep_ing &lt;dbl&gt; 3, 2, 2, 2, 1, 4, 2, 1, 3, 2, 1, 1, 2, 2, 1, 3, 2, 2, 1, 1,…\n$ perc_ocupa &lt;dbl&gt; 1, 2, 2, 0, 1, 3, 1, 0, 3, 1, 1, 0, 1, 1, 0, 3, 1, 1, 1, 1,…\n$ ing_cor    &lt;dbl&gt; 56123.75, 108048.87, 133852.88, 105054.15, 24211.95, 121649…\n$ ingtrab    &lt;dbl&gt; 35706.51, 66766.28, 93081.50, 0.00, 22255.43, 40255.41, 333…\n$ trabajo    &lt;dbl&gt; 35706.51, 66766.28, 51603.24, 0.00, 17364.13, 40255.41, 327…\n$ sueldos    &lt;dbl&gt; 33749.99, 61630.42, 41086.95, 0.00, 17364.13, 36586.94, 246…\n$ horas_extr &lt;dbl&gt; 0.00, 0.00, 978.26, 0.00, 0.00, 0.00, 7092.39, 0.00, 0.00, …\n$ comisiones &lt;dbl&gt; 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,…\n$ aguinaldo  &lt;dbl&gt; 1956.52, 4646.73, 5135.86, 0.00, 0.00, 3668.47, 1027.17, 0.…\n$ indemtrab  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\nPodemos hacer un tipo “labelbook”, usando una función que viene de la librería {sjlabelled}, get_labels(). Funciona para toda la base o para columnas, o para variables.\n\n#print(sjlabelled::get_labels(concentradohogar)) #todas\nprint(sjlabelled::get_labels(concentradohogar[, 20:30])) #de las segundas 10 variables\n\n$ocupados\nNULL\n\n$percep_ing\nNULL\n\n$perc_ocupa\nNULL\n\n$ing_cor\nNULL\n\n$ingtrab\nNULL\n\n$trabajo\nNULL\n\n$sueldos\nNULL\n\n$horas_extr\nNULL\n\n$comisiones\nNULL\n\n$aguinaldo\nNULL\n\n$indemtrab\nNULL\n\n\nNo tienen :(\nEn singular nos da las etiquetas de las variables, no de los valores:\n\n#print(get_label(concentradohogar)) #todas\nprint(get_label(concentradohogar[, 1:10])) #de las primeras 10 variables\n\n                      folioviv                       foliohog \n\"Identificador de la vivienda\"      \"Identificador del hogar\" \n                     ubica_geo                        tam_loc \n        \"Ubicación geográfica\"          \"Tamaño de localidad\" \n                     est_socio                        est_dis \n      \"Estrato socioeconómico\"   \"Estrato de diseño muestral\" \n                           upm                         factor \n \"Unidad primaria de muestreo\"          \"Factor de expansión\" \n                     clase_hog                      sexo_jefe \n              \"Clase de hogar\"      \"Sexo del jefe del hogar\" \n\nprint(get_label(concentradohogar$clase_hog)) #\n\n[1] \"Clase de hogar\"\n\n\n\n\n2.6.2 Revisión con {skimr}\n\nskimr::skim(concentradohogar)\n\n\nData summary\n\n\nName\nconcentradohogar\n\n\nNumber of rows\n90102\n\n\nNumber of columns\n126\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nnumeric\n116\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nfolioviv\n0\n1\n10\n10\n0\n88823\n0\n\n\nfoliohog\n0\n1\n1\n1\n0\n5\n0\n\n\nubica_geo\n0\n1\n5\n5\n0\n1132\n0\n\n\ntam_loc\n0\n1\n1\n1\n0\n4\n0\n\n\nest_socio\n0\n1\n1\n1\n0\n4\n0\n\n\nest_dis\n0\n1\n3\n3\n0\n560\n0\n\n\nupm\n0\n1\n7\n7\n0\n10211\n0\n\n\nclase_hog\n0\n1\n1\n1\n0\n5\n0\n\n\nsexo_jefe\n0\n1\n1\n1\n0\n2\n0\n\n\neduca_jefe\n0\n1\n2\n2\n0\n11\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nfactor\n0\n1\n416.86\n419.41\n6.0\n156.00\n283.00\n530.00\n6470.00\n▇▁▁▁▁\n\n\nedad_jefe\n0\n1\n51.23\n15.91\n13.0\n39.00\n50.00\n63.00\n109.00\n▂▇▇▂▁\n\n\ntot_integ\n0\n1\n3.44\n1.78\n1.0\n2.00\n3.00\n4.00\n19.00\n▇▂▁▁▁\n\n\nhombres\n0\n1\n1.66\n1.12\n0.0\n1.00\n1.00\n2.00\n12.00\n▇▂▁▁▁\n\n\nmujeres\n0\n1\n1.78\n1.17\n0.0\n1.00\n2.00\n2.00\n11.00\n▇▂▁▁▁\n\n\nmayores\n0\n1\n2.78\n1.36\n1.0\n2.00\n3.00\n4.00\n15.00\n▇▃▁▁▁\n\n\nmenores\n0\n1\n0.65\n0.95\n0.0\n0.00\n0.00\n1.00\n9.00\n▇▂▁▁▁\n\n\np12_64\n0\n1\n2.45\n1.49\n0.0\n1.00\n2.00\n3.00\n15.00\n▇▂▁▁▁\n\n\np65mas\n0\n1\n0.33\n0.62\n0.0\n0.00\n0.00\n1.00\n4.00\n▇▂▁▁▁\n\n\nocupados\n0\n1\n1.66\n1.09\n0.0\n1.00\n2.00\n2.00\n11.00\n▇▂▁▁▁\n\n\npercep_ing\n0\n1\n2.26\n1.18\n0.0\n1.00\n2.00\n3.00\n16.00\n▇▁▁▁▁\n\n\nperc_ocupa\n0\n1\n1.61\n1.06\n0.0\n1.00\n1.00\n2.00\n12.00\n▇▂▁▁▁\n\n\ning_cor\n0\n1\n61489.96\n78324.84\n0.0\n28385.69\n46073.68\n74343.65\n7153770.46\n▇▁▁▁▁\n\n\ningtrab\n0\n1\n40359.54\n52327.25\n0.0\n12170.67\n29899.10\n54327.95\n5891913.57\n▇▁▁▁▁\n\n\ntrabajo\n0\n1\n33514.63\n44828.95\n0.0\n49.18\n23867.40\n47445.65\n3771994.00\n▇▁▁▁▁\n\n\nsueldos\n0\n1\n28866.79\n37377.13\n0.0\n0.00\n21130.43\n41086.95\n2655737.70\n▇▁▁▁▁\n\n\nhoras_extr\n0\n1\n292.47\n1995.00\n0.0\n0.00\n0.00\n0.00\n110543.47\n▇▁▁▁▁\n\n\ncomisiones\n0\n1\n879.37\n6484.49\n0.0\n0.00\n0.00\n0.00\n690491.80\n▇▁▁▁▁\n\n\naguinaldo\n0\n1\n1489.57\n3781.67\n0.0\n0.00\n0.00\n1475.40\n293478.25\n▇▁▁▁▁\n\n\nindemtrab\n0\n1\n129.04\n3639.71\n0.0\n0.00\n0.00\n0.00\n449999.99\n▇▁▁▁▁\n\n\notra_rem\n0\n1\n654.77\n3389.42\n0.0\n0.00\n0.00\n0.00\n225245.89\n▇▁▁▁▁\n\n\nremu_espec\n0\n1\n1202.61\n11869.30\n0.0\n0.00\n0.00\n0.00\n3015428.52\n▇▁▁▁▁\n\n\nnegocio\n0\n1\n5525.91\n28303.90\n0.0\n0.00\n0.00\n1549.18\n5712891.84\n▇▁▁▁▁\n\n\nnoagrop\n0\n1\n4374.96\n17327.48\n0.0\n0.00\n0.00\n0.00\n1114679.34\n▇▁▁▁▁\n\n\nindustria\n0\n1\n997.87\n8092.96\n0.0\n0.00\n0.00\n0.00\n1114679.34\n▇▁▁▁▁\n\n\ncomercio\n0\n1\n1466.54\n11309.68\n0.0\n0.00\n0.00\n0.00\n889369.06\n▇▁▁▁▁\n\n\nservicios\n0\n1\n1910.54\n10479.11\n0.0\n0.00\n0.00\n0.00\n889524.59\n▇▁▁▁▁\n\n\nagrope\n0\n1\n1150.96\n22407.72\n0.0\n0.00\n0.00\n0.00\n5712891.84\n▇▁▁▁▁\n\n\nagricolas\n0\n1\n584.18\n9493.09\n0.0\n0.00\n0.00\n0.00\n1473748.04\n▇▁▁▁▁\n\n\npecuarios\n0\n1\n489.26\n19957.84\n0.0\n0.00\n0.00\n0.00\n5712891.84\n▇▁▁▁▁\n\n\nreproducc\n0\n1\n29.05\n1651.04\n0.0\n0.00\n0.00\n0.00\n424032.78\n▇▁▁▁▁\n\n\npesca\n0\n1\n48.46\n1442.87\n0.0\n0.00\n0.00\n0.00\n154190.54\n▇▁▁▁▁\n\n\notros_trab\n0\n1\n1319.00\n7439.20\n0.0\n0.00\n0.00\n0.00\n1257295.08\n▇▁▁▁▁\n\n\nrentas\n0\n1\n3585.66\n51810.69\n0.0\n0.00\n0.00\n0.00\n6854754.09\n▇▁▁▁▁\n\n\nutilidad\n0\n1\n2922.56\n50880.21\n0.0\n0.00\n0.00\n0.00\n6854754.09\n▇▁▁▁▁\n\n\narrenda\n0\n1\n663.09\n7270.20\n0.0\n0.00\n0.00\n0.00\n733695.65\n▇▁▁▁▁\n\n\ntransfer\n0\n1\n10901.15\n21915.52\n0.0\n0.00\n3692.92\n12913.03\n1001867.40\n▇▁▁▁▁\n\n\njubilacion\n0\n1\n4722.85\n17245.75\n0.0\n0.00\n0.00\n0.00\n688524.59\n▇▁▁▁▁\n\n\nbecas\n0\n1\n105.17\n1548.61\n0.0\n0.00\n0.00\n0.00\n153831.51\n▇▁▁▁▁\n\n\ndonativos\n0\n1\n1305.04\n5071.83\n0.0\n0.00\n0.00\n0.00\n413114.75\n▇▁▁▁▁\n\n\nremesas\n0\n1\n848.70\n5791.98\n0.0\n0.00\n0.00\n0.00\n238524.59\n▇▁▁▁▁\n\n\nbene_gob\n0\n1\n1849.19\n3366.51\n0.0\n0.00\n0.00\n2611.22\n63195.64\n▇▁▁▁▁\n\n\ntransf_hog\n0\n1\n1512.32\n4697.95\n0.0\n0.00\n0.00\n771.42\n465000.00\n▇▁▁▁▁\n\n\ntrans_inst\n0\n1\n557.90\n7606.45\n0.0\n0.00\n0.00\n0.00\n978260.86\n▇▁▁▁▁\n\n\nestim_alqu\n0\n1\n6592.66\n8338.00\n0.0\n2903.22\n4500.00\n8709.67\n348387.09\n▇▁▁▁▁\n\n\notros_ing\n0\n1\n50.95\n973.27\n0.0\n0.00\n0.00\n0.00\n73369.56\n▇▁▁▁▁\n\n\ngasto_mon\n0\n1\n37615.18\n34649.23\n0.0\n18561.37\n29678.83\n45901.43\n1703575.17\n▇▁▁▁▁\n\n\nalimentos\n0\n1\n14046.16\n11010.37\n0.0\n7482.73\n11957.05\n17961.27\n849839.62\n▇▁▁▁▁\n\n\nali_dentro\n0\n1\n11533.55\n7834.39\n0.0\n6197.01\n10144.16\n15158.38\n302942.31\n▇▁▁▁▁\n\n\ncereales\n0\n1\n2052.96\n1570.90\n0.0\n977.12\n1761.40\n2751.39\n32631.39\n▇▁▁▁▁\n\n\ncarnes\n0\n1\n2493.10\n2847.37\n0.0\n359.99\n1774.27\n3689.96\n157448.49\n▇▁▁▁▁\n\n\npescado\n0\n1\n248.92\n857.41\n0.0\n0.00\n0.00\n0.00\n60685.70\n▇▁▁▁▁\n\n\nleche\n0\n1\n1011.34\n1277.08\n0.0\n0.00\n642.85\n1427.11\n32014.25\n▇▁▁▁▁\n\n\nhuevo\n0\n1\n515.33\n595.19\n0.0\n0.00\n385.71\n848.56\n9218.54\n▇▁▁▁▁\n\n\naceites\n0\n1\n214.21\n446.77\n0.0\n0.00\n0.00\n347.14\n13395.84\n▇▁▁▁▁\n\n\ntuberculo\n0\n1\n198.87\n337.12\n0.0\n0.00\n0.00\n321.42\n12857.14\n▇▁▁▁▁\n\n\nverduras\n0\n1\n1241.79\n1234.53\n0.0\n321.42\n977.12\n1810.20\n54784.26\n▇▁▁▁▁\n\n\nfrutas\n0\n1\n469.28\n841.42\n0.0\n0.00\n0.00\n642.85\n38571.42\n▇▁▁▁▁\n\n\nazucar\n0\n1\n109.78\n293.17\n0.0\n0.00\n0.00\n0.00\n25714.28\n▇▁▁▁▁\n\n\ncafe\n0\n1\n120.40\n377.98\n0.0\n0.00\n0.00\n0.00\n12471.42\n▇▁▁▁▁\n\n\nespecias\n0\n1\n108.18\n284.00\n0.0\n0.00\n0.00\n64.28\n13139.99\n▇▁▁▁▁\n\n\notros_alim\n0\n1\n1651.95\n2858.15\n0.0\n0.00\n321.42\n2314.28\n55028.54\n▇▁▁▁▁\n\n\nbebidas\n0\n1\n1097.43\n1570.63\n0.0\n218.57\n719.99\n1480.50\n128237.11\n▇▁▁▁▁\n\n\nali_fuera\n0\n1\n2445.31\n6907.11\n0.0\n0.00\n0.00\n2571.42\n802542.78\n▇▁▁▁▁\n\n\ntabaco\n0\n1\n67.31\n449.34\n0.0\n0.00\n0.00\n0.00\n19234.27\n▇▁▁▁▁\n\n\nvesti_calz\n0\n1\n1470.03\n2611.47\n0.0\n0.00\n684.77\n1858.68\n131191.33\n▇▁▁▁▁\n\n\nvestido\n0\n1\n906.82\n1863.60\n0.0\n0.00\n273.91\n1105.42\n96050.32\n▇▁▁▁▁\n\n\ncalzado\n0\n1\n563.21\n1092.30\n0.0\n0.00\n107.60\n733.69\n47739.11\n▇▁▁▁▁\n\n\nvivienda\n0\n1\n3361.12\n5429.41\n0.0\n1020.00\n2160.00\n3862.21\n604814.51\n▇▁▁▁▁\n\n\nalquiler\n0\n1\n1031.01\n4667.52\n0.0\n0.00\n0.00\n0.00\n581951.61\n▇▁▁▁▁\n\n\npred_cons\n0\n1\n180.63\n1100.52\n0.0\n0.00\n0.00\n87.50\n116400.00\n▇▁▁▁▁\n\n\nagua\n0\n1\n407.19\n776.34\n0.0\n0.00\n240.00\n540.00\n78000.00\n▇▁▁▁▁\n\n\nenergia\n0\n1\n1742.29\n1743.06\n0.0\n553.69\n1400.80\n2400.00\n113080.64\n▇▁▁▁▁\n\n\nlimpieza\n0\n1\n2345.68\n3932.56\n0.0\n771.00\n1379.01\n2481.43\n302696.82\n▇▁▁▁▁\n\n\ncuidados\n0\n1\n1745.97\n2833.03\n0.0\n678.00\n1158.36\n1896.00\n128197.70\n▇▁▁▁▁\n\n\nutensilios\n0\n1\n218.77\n1378.17\n0.0\n0.00\n0.00\n0.00\n294740.20\n▇▁▁▁▁\n\n\nenseres\n0\n1\n380.94\n1649.55\n0.0\n0.00\n0.00\n0.00\n90098.34\n▇▁▁▁▁\n\n\nsalud\n0\n1\n1270.55\n5662.22\n0.0\n0.00\n146.73\n841.29\n324547.74\n▇▁▁▁▁\n\n\natenc_ambu\n0\n1\n903.67\n4754.37\n0.0\n0.00\n0.00\n538.03\n283695.64\n▇▁▁▁▁\n\n\nhospital\n0\n1\n152.99\n2368.65\n0.0\n0.00\n0.00\n0.00\n241434.73\n▇▁▁▁▁\n\n\nmedicinas\n0\n1\n213.90\n1294.84\n0.0\n0.00\n0.00\n97.82\n127464.42\n▇▁▁▁▁\n\n\ntransporte\n0\n1\n7538.59\n12471.10\n0.0\n1975.75\n4803.31\n9299.92\n491168.39\n▇▁▁▁▁\n\n\npublico\n0\n1\n1365.08\n2596.60\n0.0\n0.00\n0.00\n1851.41\n137031.32\n▇▁▁▁▁\n\n\nforaneo\n0\n1\n205.99\n1200.95\n0.0\n0.00\n0.00\n0.00\n88011.04\n▇▁▁▁▁\n\n\nadqui_vehi\n0\n1\n1045.70\n9662.96\n0.0\n0.00\n0.00\n0.00\n489130.43\n▇▁▁▁▁\n\n\nmantenim\n0\n1\n3122.62\n4882.43\n0.0\n0.00\n929.03\n4770.49\n113684.95\n▇▁▁▁▁\n\n\nrefaccion\n0\n1\n275.12\n1029.55\n0.0\n0.00\n0.00\n0.00\n39130.43\n▇▁▁▁▁\n\n\ncombus\n0\n1\n2847.50\n4483.70\n0.0\n0.00\n870.96\n4354.83\n113225.80\n▇▁▁▁▁\n\n\ncomunica\n0\n1\n1799.20\n2322.07\n0.0\n580.64\n1380.00\n2409.98\n105366.77\n▇▁▁▁▁\n\n\neduca_espa\n0\n1\n3506.12\n8866.90\n0.0\n0.00\n753.00\n3641.60\n475717.08\n▇▁▁▁▁\n\n\neducacion\n0\n1\n2466.90\n7454.48\n0.0\n0.00\n0.00\n2177.41\n451161.26\n▇▁▁▁▁\n\n\nesparci\n0\n1\n718.84\n2310.87\n0.0\n0.00\n0.00\n747.00\n96406.00\n▇▁▁▁▁\n\n\npaq_turist\n0\n1\n320.39\n2610.74\n0.0\n0.00\n0.00\n0.00\n166304.34\n▇▁▁▁▁\n\n\npersonales\n0\n1\n2953.55\n4402.36\n0.0\n998.69\n1884.00\n3452.78\n296006.96\n▇▁▁▁▁\n\n\ncuida_pers\n0\n1\n2239.89\n2335.69\n0.0\n888.34\n1628.67\n2824.79\n69462.00\n▇▁▁▁▁\n\n\nacces_pers\n0\n1\n94.06\n433.90\n0.0\n0.00\n0.00\n0.00\n23996.72\n▇▁▁▁▁\n\n\notros_gas\n0\n1\n619.60\n3203.71\n0.0\n0.00\n0.00\n48.91\n295256.96\n▇▁▁▁▁\n\n\ntransf_gas\n0\n1\n1123.38\n5306.60\n0.0\n0.00\n0.00\n225.08\n737704.91\n▇▁▁▁▁\n\n\npercep_tot\n0\n1\n3940.89\n40469.54\n0.0\n0.00\n0.00\n2842.18\n8171344.09\n▇▁▁▁▁\n\n\nretiro_inv\n0\n1\n993.91\n14080.54\n0.0\n0.00\n0.00\n0.00\n3480662.98\n▇▁▁▁▁\n\n\nprestamos\n0\n1\n407.08\n4801.37\n0.0\n0.00\n0.00\n0.00\n540983.60\n▇▁▁▁▁\n\n\notras_perc\n0\n1\n877.86\n24750.31\n0.0\n0.00\n0.00\n0.00\n4402173.91\n▇▁▁▁▁\n\n\nero_nm_viv\n0\n1\n40.11\n2162.50\n0.0\n0.00\n0.00\n0.00\n440217.38\n▇▁▁▁▁\n\n\nero_nm_hog\n0\n1\n1621.92\n27703.08\n0.0\n0.00\n0.00\n1349.97\n8171344.09\n▇▁▁▁▁\n\n\nerogac_tot\n0\n1\n7659.37\n43226.39\n0.0\n0.00\n489.13\n6208.52\n5733149.15\n▇▁▁▁▁\n\n\ncuota_viv\n0\n1\n712.97\n3500.36\n0.0\n0.00\n0.00\n0.00\n150000.00\n▇▁▁▁▁\n\n\nmater_serv\n0\n1\n441.57\n4152.57\n0.0\n0.00\n0.00\n0.00\n391304.34\n▇▁▁▁▁\n\n\nmaterial\n0\n1\n267.11\n2604.68\n0.0\n0.00\n0.00\n0.00\n244565.21\n▇▁▁▁▁\n\n\nservicio\n0\n1\n174.46\n2301.69\n0.0\n0.00\n0.00\n0.00\n195652.17\n▇▁▁▁▁\n\n\ndeposito\n0\n1\n4006.25\n31415.73\n0.0\n0.00\n0.00\n1320.65\n4176795.57\n▇▁▁▁▁\n\n\nprest_terc\n0\n1\n125.48\n4000.35\n0.0\n0.00\n0.00\n0.00\n1100543.47\n▇▁▁▁▁\n\n\npago_tarje\n0\n1\n990.75\n9069.74\n0.0\n0.00\n0.00\n0.00\n1640883.97\n▇▁▁▁▁\n\n\ndeudas\n0\n1\n430.28\n2720.39\n0.0\n0.00\n0.00\n0.00\n122282.60\n▇▁▁▁▁\n\n\nbalance\n0\n1\n420.11\n4608.27\n0.0\n0.00\n0.00\n0.00\n496467.39\n▇▁▁▁▁\n\n\notras_erog\n0\n1\n531.96\n14050.93\n0.0\n0.00\n0.00\n0.00\n2934782.60\n▇▁▁▁▁\n\n\nsmg\n0\n1\n15558.30\n0.00\n15558.3\n15558.30\n15558.30\n15558.30\n15558.30\n▁▁▇▁▁\n\n\n\n\n\n\n\n2.6.3 Selección de casos y de variables\nPoco a poco vamos comprendiendo más la lógica de R. Hay varias “formas” de programar. Por lo que no te asustes si varios códigos llegan al mismo resultado\nPara revisar el contenido de un data frame podemos usar, como lo hicimos anteriormente, el formato dataframe$var o usar corchete, checa como estas cuatro formas tan el mismo resultado.\n\nx&lt;-concentradohogar$ing_cor\nx&lt;-concentradohogar[[\"ing_cor\"]]  # ¡Ojo con las comillas! \nx&lt;-concentradohogar[,23]\nx&lt;-concentradohogar[,\"ing_cor\"]\n\nAhora, con el formato de dplyr podemos llegar a lo mismo\n\nx&lt;-concentradohogar %&gt;% \n  select(ing_cor)"
  },
  {
    "objectID": "P2.html#subsetting",
    "href": "P2.html#subsetting",
    "title": "2  Importación de conjuntos de datos",
    "section": "2.7 “Subsetting”",
    "text": "2.7 “Subsetting”\nSelección “inversa” O sea no “botar algo”, es con el negativo. No funciona con todos los formatos\n\nx&lt;-concentradohogar %&gt;% \n  select(-ing_cor)\n\nrm(x) #rm sólo bota objetos\n\nPero con los otros formatos podemos “asignar” valores adentro de un data.frame, y uno de eso valores puede ser “la nada””\n\nconcentradohogar$ing_cor2&lt;-concentradohogar$ing_cor\nconcentradohogar$ing_cor2&lt;-NULL\n\nDe aquí viene esa cuesta en el aprendizaje; tenemos que comprender en qué forma programó el que hizo la librería e incluso a veces cómo aprendió quién te está enseñando o el foro que estás leyendo.\nRara vez utilizamos una base de datos completa, y rara vez queremos hacer operaciones completas con ellas.\nVamos a pedir cosas más específicas y podemos seleccionar observaciones o filas. Como nuestra base de datos es muy grande, guardaremos el filtro o selección en un objeto.\n\nsubset1&lt;-concentradohogar[concentradohogar$ing_cor&gt;5000,]\n\nTambién podemos seleccionar columnas\n\nsubset2&lt;- concentradohogar[, c(\"sexo_jefe\", \"edad_jefe\", \"ing_cor\")]\n\npodemos combinar los dos tipos de selección\n\nsubset3&lt;- concentradohogar[(concentradohogar$ing_cor&gt;5000 & concentradohogar$sexo_jefe==1 ), c(\"sexo_jefe\", \"edad_jefe\", \"ing_cor\")]\n\nCon dplyr, podemos usar “filter” y “select”\n\nsubset4&lt;-concentradohogar %&gt;% \n  dplyr::filter(ing_cor&gt;5000 & sexo_jefe==1) %&gt;%\n  dplyr::select(sexo_jefe, edad_jefe, ing_cor)"
  },
  {
    "objectID": "P3.html#paquetes",
    "href": "P3.html#paquetes",
    "title": "3  Análisis descriptivo",
    "section": "3.1 Paquetes",
    "text": "3.1 Paquetes\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse, \n               readxl,writexl,googlesheets4, # importar hojas de cálculo\n               haven, foreign, # importación de dta y sab\n               sjlabelled, # etiquetas\n               janitor, skimr, # limpieza y tabulados\n               dataMaid,  DataExplorer, SmartEDA) # paquetes EDA"
  },
  {
    "objectID": "P3.html#datos",
    "href": "P3.html#datos",
    "title": "3  Análisis descriptivo",
    "section": "3.2 Datos",
    "text": "3.2 Datos\n\nconcentradohogar &lt;- haven::read_dta(\"datos/concentradohogar.dta\")"
  },
  {
    "objectID": "P3.html#etiquetas-y-cómo-usarlas",
    "href": "P3.html#etiquetas-y-cómo-usarlas",
    "title": "3  Análisis descriptivo",
    "section": "3.3 Etiquetas y cómo usarlas",
    "text": "3.3 Etiquetas y cómo usarlas\nPodemos ver que los objetos “data.frame”(spoiler, ya hablaremos de ellos)\n\nclass(concentradohogar$sexo_jefe)\n\n[1] \"character\"\n\n\n\n3.3.1 Ejemplo de etiquetado\nPara que se vea mejor nuestro tabulado, sería bueno que nuestras variables tuvieran etiqueta. Para ello utilizaremos el paquete “sjlabelled”\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\nEtiquetemos también la variable “clase_hog”. Podemos checar cómo está estructurada esta base acá https://www.inegi.org.mx/rnm/index.php/catalog/685/data-dictionary\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(clase_hog=as_numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) \n\n\ntable(concentradohogar$sexo_jefe)\n\n\n    1     2 \n61905 28197 \n\ntable(sjlabelled::as_label(concentradohogar$sexo_jefe))\n\n\nHombre  Mujer \n 61905  28197"
  },
  {
    "objectID": "P3.html#variables-nominales",
    "href": "P3.html#variables-nominales",
    "title": "3  Análisis descriptivo",
    "section": "3.4 Variables nominales",
    "text": "3.4 Variables nominales\nLa variable nominal “sexo_jefe”, se captura con “1” para hombres y con un “2” para mujeres en la base de datos. Podemos establecer una operación de igual y además sumar los casos que cumplan con esta condición:\n\nconcentradohogar %&gt;% \n  dplyr::count(sexo_jefe==2) # cuentan los casos que cumplen con la condición \"sexo_jefe==2\"\n\n# A tibble: 2 × 2\n  `sexo_jefe == 2`     n\n  &lt;lgl&gt;            &lt;int&gt;\n1 FALSE            61905\n2 TRUE             28197\n\n\nEsto es a lo que nos referimos con contar frecuencias. Podemos contar casos que cumplan con una operación de igualdad.\n\nconcentradohogar %&gt;%\n  with(\n    table(sexo_jefe)\n    )\n\nsexo_jefe\n    1     2 \n61905 28197 \n\n\n\n3.4.1 Recordemos nuestro etiquetado\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(sexo_jefe=as_numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) \n\n\nconcentradohogar&lt;-concentradohogar %&gt;% \n  mutate(clase_hog=as_numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) \n\nCon “tabyl()”” de “janitor””\n\nconcentradohogar %&gt;%\n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %&gt;%\n  janitor::tabyl(sexo_jefe)\n\n sexo_jefe     n   percent\n    Hombre 61905 0.6870547\n     Mujer 28197 0.3129453\n\n\nPara ver que esto es una distribución de frecuencias sería muy útil ver la proporción total, ello se realiza agregando un elemento más en nuestro código con una “tubería”:\n\nconcentradohogar %&gt;% \n  dplyr::mutate(sexo_jefe=as_label(sexo_jefe))  %&gt;%\n  janitor::tabyl(sexo_jefe) %&gt;% \n  janitor::adorn_totals()\n\n sexo_jefe     n   percent\n    Hombre 61905 0.6870547\n     Mujer 28197 0.3129453\n     Total 90102 1.0000000\n\n\nHoy revisamos algunos tipos de variables\n\nclass(concentradohogar$sexo_jefe) # variable sin etiqueta\n\n[1] \"numeric\"\n\nclass(as_label(concentradohogar$sexo_jefe)) # variable con etiqueta\n\n[1] \"factor\"\n\nclass(as_label(concentradohogar$educa_jefe)) # variable ordinal\n\n[1] \"character\"\n\nclass(concentradohogar$ing_cor) # variable de intervalo/razón\n\n[1] \"numeric\"\n\n\nEn general, tendremos variables de factor que podrían ser consideradas como cualitativas y numéricas. Aunque en realidad, R tiene muchas formas de almacenamiento. Como mostramos con el comando “glimpse()” en la práctica anterior, podemos revisar una variable en específico:\n\ndplyr::glimpse(concentradohogar$sexo_jefe)\n\n num [1:90102] 2 1 1 1 1 1 2 2 2 1 ...\n - attr(*, \"labels\")= Named num [1:2] 1 2\n  ..- attr(*, \"names\")= chr [1:2] \"Hombre\" \"Mujer\"\n - attr(*, \"label\")= chr \"Sexo del jefe del hogar\"\n\n\n\nconcentradohogar %&gt;% mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # cambia los valores de la variable a sus etiquetas\n                tabyl(sexo_jefe) %&gt;% # para hacer la tabla\n                adorn_totals() %&gt;% # añade totales\n                adorn_pct_formatting()  # nos da porcentaje en lugar de proporción\n\n sexo_jefe     n percent\n    Hombre 61905   68.7%\n     Mujer 28197   31.3%\n     Total 90102  100.0%\n\n\nLa tubería o “pipe” %&gt;% nos permite ir agregando elementos de manera sencilla nuestros comandos. En este caso decimos que dentro del objeto haga el cambio, luego la tabla, que le ponga porcentajes y finalmente que nos dé los totales. El total del 100% no aparece, por un elemento propio del programa."
  },
  {
    "objectID": "P3.html#variables-ordinales",
    "href": "P3.html#variables-ordinales",
    "title": "3  Análisis descriptivo",
    "section": "3.5 Variables ordinales",
    "text": "3.5 Variables ordinales\nSon variables que dan cuenta de cualidades o condiciones a través de categorías que guardan un orden entre sí.\nVamos a darle una “ojeada” a esta variable\n\nglimpse(concentradohogar$educa_jefe)\n\n chr [1:90102] \"03\" \"08\" \"10\" \"11\" \"08\" \"08\" \"10\" \"06\" \"10\" \"04\" \"06\" \"08\" ...\n - attr(*, \"label\")= chr \"Educación formal del jefe del hogar\"\n - attr(*, \"format.stata\")= chr \"%2s\"\n\n\nEtiquetemos también nuestra variable ordinal\n\nconcentradohogar &lt;-concentradohogar %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\"))\n\nHoy hacemos la tabla, con las etiquetas y vemos que se ve más bonita:\n\nconcentradohogar %&gt;%\n  mutate(educa_jefe=as_label(educa_jefe)) %&gt;% \n  tabyl(educa_jefe)\n\n              educa_jefe     n     percent\n         Sin instrucción  5495 0.060986438\n              Preescolar    32 0.000355153\n     Primaria incompleta 13328 0.147921245\n       Primaria completa 14928 0.165678897\n   Secundaria incompleta  2728 0.030276797\n     Secundaria completa 24581 0.272813034\n Preparatoria incompleta  3032 0.033650751\n   Preparatoria completa 11782 0.130762913\n  Profesional incompleta  2645 0.029355619\n    Profesional completa  9788 0.108632439\n                Posgrado  1763 0.019566713\n\n\nPara que no nos salgan las categorías sin datos podemos poner una opción dentro del comando “tabyl()”\n\nconcentradohogar %&gt;% \n  mutate(educa_jefe=as_label(educa_jefe)) %&gt;% \n  tabyl(educa_jefe, show_missing_levels=F ) %&gt;% # esta opción elimina los valores con 0\n  adorn_totals()  \n\n              educa_jefe     n     percent\n         Sin instrucción  5495 0.060986438\n              Preescolar    32 0.000355153\n     Primaria incompleta 13328 0.147921245\n       Primaria completa 14928 0.165678897\n   Secundaria incompleta  2728 0.030276797\n     Secundaria completa 24581 0.272813034\n Preparatoria incompleta  3032 0.033650751\n   Preparatoria completa 11782 0.130762913\n  Profesional incompleta  2645 0.029355619\n    Profesional completa  9788 0.108632439\n                Posgrado  1763 0.019566713\n                   Total 90102 1.000000000"
  },
  {
    "objectID": "P3.html#bivariado-cualitativo",
    "href": "P3.html#bivariado-cualitativo",
    "title": "3  Análisis descriptivo",
    "section": "3.6 Bivariado cualitativo",
    "text": "3.6 Bivariado cualitativo\n\n3.6.1 Cálculo de frecuencias\nLas tablas de doble entrada tiene su nombre porque en las columnas entran los valores de una variable categórica, y en las filas de una segunda. Basicamente es como hacer un conteo de todas las combinaciones posibles entre los valores de una variable con la otra.\nPor ejemplo, si quisiéramos combinar las dos variables que ya estudiamos lo podemos hacer, con una tabla de doble entrada:\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n                tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí \n                adorn_totals()  \n\n    clase_hog Hombre Mujer\n  unipersonal   6519  5367\n      nuclear  41919 13621\n     ampliado  12898  8888\n    compuesto    372   211\n corresidente    197   110\n        Total  61905 28197\n\n\nObservamos que en cada celda confluyen los casos que comparten las mismas características:\n\nconcentradohogar %&gt;%   \n    count(clase_hog==1 & sexo_jefe==1) # nos da la segunda celda de la izquierda\n\n# A tibble: 2 × 2\n  `clase_hog == 1 & sexo_jefe == 1`     n\n  &lt;lgl&gt;                             &lt;int&gt;\n1 FALSE                             83583\n2 TRUE                               6519\n\n\n\n\n3.6.2 Totales y porcentajes\nDe esta manera se colocan todos los datos. Si observa al poner la función “adorn_totals()” lo agregó como una nueva fila de totales, pero también podemos pedirle que agregue una columna de totales.\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí dos variables\n  adorn_totals(\"col\")  \n\n    clase_hog Hombre Mujer Total\n  unipersonal   6519  5367 11886\n      nuclear  41919 13621 55540\n     ampliado  12898  8888 21786\n    compuesto    372   211   583\n corresidente    197   110   307\n\n\nO bien agregar los dos, introduciendo en el argumento “c(”col”, “row”)” un vector de caracteres de las dos opciones requeridas:\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) \n\n    clase_hog Hombre Mujer Total\n  unipersonal   6519  5367 11886\n      nuclear  41919 13621 55540\n     ampliado  12898  8888 21786\n    compuesto    372   211   583\n corresidente    197   110   307\n        Total  61905 28197 90102\n\n\nDel mismo modo, podemos calcular los porcentajes. Pero los podemos calcular de tres formas. Uno es que lo calculemos para los totales calculados para las filas, para las columnas o para el gran total poblacional.\nPara columnas tenemos el siguiente código y los siguientes resultados:\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %&gt;% \n  adorn_percentages(\"col\") %&gt;% # Divide los valores entre el total de la columna\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre  Mujer  Total\n  unipersonal  10.5%  19.0%  13.2%\n      nuclear  67.7%  48.3%  61.6%\n     ampliado  20.8%  31.5%  24.2%\n    compuesto   0.6%   0.7%   0.6%\n corresidente   0.3%   0.4%   0.3%\n        Total 100.0% 100.0% 100.0%\n\n\nCuando se hagan cuadros de distribuciones (que todas sus partes suman 100), los porcentajes pueden ser una gran ayuda para la interpretación, sobre todos cuando se comparar poblaciones de categorías de diferente tamaño. Por lo general, queremos que los cuadros nos den información de donde están los totales y su 100%, de esta manera el lector se puede guiar de porcentaje con respecto a qué está leyendo. En este caso, vemos que el 100% es común en la última fila.\nVeamos la diferencia de cómo podemos leer la misma celda, pero hoy, hemos calculado los porcentajes a nivel de fila:\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %&gt;% \n  adorn_percentages(\"row\") %&gt;% # Divide los valores entre el total de la fila\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre Mujer  Total\n  unipersonal  54.8% 45.2% 100.0%\n      nuclear  75.5% 24.5% 100.0%\n     ampliado  59.2% 40.8% 100.0%\n    compuesto  63.8% 36.2% 100.0%\n corresidente  64.2% 35.8% 100.0%\n        Total  68.7% 31.3% 100.0%\n\n\nFinalmente, podemos calcular los porcentajes con referencia a la población total en análisis. Es decir la celda en la esquina inferior derecha de nuestra tabla original.\n\nconcentradohogar %&gt;% \n  mutate(clase_hog=as_label(clase_hog)) %&gt;% \n  mutate(sexo_jefe=as_label(sexo_jefe)) %&gt;% # para que las lea como factor\n  tabyl(clase_hog, sexo_jefe, show_missing_levels=F ) %&gt;% # incluimos aquí dos variable\n  adorn_totals(c(\"col\", \"row\")) %&gt;% \n  adorn_percentages(\"all\") %&gt;% # Divide los valores entre el total de la población\n  adorn_pct_formatting() # lo vuelve porcentaje\n\n    clase_hog Hombre Mujer  Total\n  unipersonal   7.2%  6.0%  13.2%\n      nuclear  46.5% 15.1%  61.6%\n     ampliado  14.3%  9.9%  24.2%\n    compuesto   0.4%  0.2%   0.6%\n corresidente   0.2%  0.1%   0.3%\n        Total  68.7% 31.3% 100.0%"
  },
  {
    "objectID": "P4.html#intro",
    "href": "P4.html#intro",
    "title": "4  API INEGI y Banxico",
    "section": "4.1 Intro",
    "text": "4.1 Intro\nEn esta breve práctica revisaremos un poco de los gráficos de series de tiempo, y con esa excusa, bajaremos datos del INEGI directamente a nuestro ambiente.\nHay un paquete especializado (que antes funcionaba mejor) que nos permite descargar algunos indicadores del INEGI {inegiR}, específicamente los del Banco de Información Económica (BIE) y el paquete {siebanxicor} que consulta los catálogos de Banxico."
  },
  {
    "objectID": "P4.html#token",
    "href": "P4.html#token",
    "title": "4  API INEGI y Banxico",
    "section": "4.2 Token",
    "text": "4.2 Token\nNecesitamos crear un objeto donde esté nuestro token solicitado en INEGI y que llegó al correo electrónico\ntoken &lt;- \"aquí va tu token\"\nEl token está ligado a tu cuenta de correo, no lo compartas porque si alguien lo utiliza mal, tu cuenta puede ser bloqueada."
  },
  {
    "objectID": "P4.html#paquetes",
    "href": "P4.html#paquetes",
    "title": "4  API INEGI y Banxico",
    "section": "4.3 Paquetes",
    "text": "4.3 Paquetes\n\nif(!require('pacman')) install.packages('pacman')\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse, # ya lo conocemos\n               inegiR, # para consultas en el BIE\n               siebanxicor,\n               httr, jsonlite, # Para consultas en todo el banco\n               plotly, # gráficos interactivos\n               lubridate, # para manejo de fechas\n               TTR)"
  },
  {
    "objectID": "P4.html#consulta-con-inegir",
    "href": "P4.html#consulta-con-inegir",
    "title": "4  API INEGI y Banxico",
    "section": "4.4 Consulta con {inegiR}",
    "text": "4.4 Consulta con {inegiR}\nEsto sólo sirve para los indicadores del BIE: https://www.inegi.org.mx/servicios/api_indicadores.html\n\ninegiR::inegi_series(serie=628194,# este número está en el sitio este el IPC\n                     token = token)\n\n          date date_shortcut       values notes\n1   2024-07-01            M7 136.00300000    NA\n2   2024-06-01            M6 134.59400000    NA\n3   2024-05-01            M5 134.08700000    NA\n4   2024-04-01            M4 134.33600000    NA\n5   2024-03-01            M3 134.06500000    NA\n6   2024-02-01            M2 133.68100000    NA\n7   2024-01-01            M1 133.55500000    NA\n8   2023-12-01           M12 132.37300000    NA\n9   2023-11-01           M11 131.44500000    NA\n10  2023-10-01           M10 130.60900000    NA\n11  2023-09-01            M9 130.12000000    NA\n12  2023-08-01            M8 129.54500000    NA\n13  2023-07-01            M7 128.83200000    NA\n14  2023-06-01            M6 128.21400000    NA\n15  2023-05-01            M5 128.08400000    NA\n16  2023-04-01            M4 128.36300000    NA\n17  2023-03-01            M3 128.38900000    NA\n18  2023-02-01            M2 128.04600000    NA\n19  2023-01-01            M1 127.33600000    NA\n20  2022-12-01           M12 126.47800000    NA\n21  2022-11-01           M11 125.99700000    NA\n22  2022-10-01           M10 125.27600000    NA\n23  2022-09-01            M9 124.57100000    NA\n24  2022-08-01            M8 123.80300000    NA\n25  2022-07-01            M7 122.94800000    NA\n26  2022-06-01            M6 122.04400000    NA\n27  2022-05-01            M5 121.02200000    NA\n28  2022-04-01            M4 120.80900000    NA\n29  2022-03-01            M3 120.15900000    NA\n30  2022-02-01            M2 118.98100000    NA\n31  2022-01-01            M1 118.00200000    NA\n32  2021-12-01           M12 117.30800000    NA\n33  2021-11-01           M11 116.88400000    NA\n34  2021-10-01           M10 115.56100000    NA\n35  2021-09-01            M9 114.60100000    NA\n36  2021-08-01            M8 113.89900000    NA\n37  2021-07-01            M7 113.68200000    NA\n38  2021-06-01            M6 113.01800000    NA\n39  2021-05-01            M5 112.41900000    NA\n40  2021-04-01            M4 112.19000000    NA\n41  2021-03-01            M3 111.82400000    NA\n42  2021-02-01            M2 110.90700000    NA\n43  2021-01-01            M1 110.21000000    NA\n44  2020-12-01           M12 109.27100000    NA\n45  2020-11-01           M11 108.85600000    NA\n46  2020-10-01           M10 108.77400000    NA\n47  2020-09-01            M9 108.11400000    NA\n48  2020-08-01            M8 107.86700000    NA\n49  2020-07-01            M7 107.44400000    NA\n50  2020-06-01            M6 106.74300000    NA\n51  2020-05-01            M5 106.16200000    NA\n52  2020-04-01            M4 105.75500000    NA\n53  2020-03-01            M3 106.83800000    NA\n54  2020-02-01            M2 106.88900000    NA\n55  2020-01-01            M1 106.44700000    NA\n56  2019-12-01           M12 105.93400000    NA\n57  2019-11-01           M11 105.34600000    NA\n58  2019-10-01           M10 104.50300000    NA\n59  2019-09-01            M9 103.94200000    NA\n60  2019-08-01            M8 103.67000000    NA\n61  2019-07-01            M7 103.68700000    NA\n62  2019-06-01            M6 103.29900000    NA\n63  2019-05-01            M5 103.23300000    NA\n64  2019-04-01            M4 103.53100000    NA\n65  2019-03-01            M3 103.47600000    NA\n66  2019-02-01            M2 103.07900000    NA\n67  2019-01-01            M1 103.10800000    NA\n68  2018-12-01           M12 103.02000000    NA\n69  2018-11-01           M11 102.30300000    NA\n70  2018-10-01           M10 101.44000000    NA\n71  2018-09-01            M9 100.91700000    NA\n72  2018-08-01            M8 100.49200000    NA\n73  2018-07-01            M7  99.90909910    NA\n74  2018-06-01            M6  99.37646493    NA\n75  2018-05-01            M5  98.99408017    NA\n76  2018-04-01            M4  99.15484705    NA\n77  2018-03-01            M3  99.49215698    NA\n78  2018-02-01            M2  99.17137448    NA\n79  2018-01-01            M1  98.79499970    NA\n80  2017-12-01           M12  98.27288299    NA\n81  2017-11-01           M11  97.69517399    NA\n82  2017-10-01           M10  96.69826913    NA\n83  2017-09-01            M9  96.09351524    NA\n84  2017-08-01            M8  95.79376765    NA\n85  2017-07-01            M7  95.32273574    NA\n86  2017-06-01            M6  94.96363964    NA\n87  2017-05-01            M5  94.72549432    NA\n88  2017-04-01            M4  94.83893263    NA\n89  2017-03-01            M3  94.72248933    NA\n90  2017-02-01            M2  94.14478034    NA\n91  2017-01-01            M1  93.60388244    NA\n92  2016-12-01           M12  92.03903480    NA\n93  2016-11-01           M11  91.61683394    NA\n94  2016-10-01           M10  90.90615422    NA\n95  2016-09-01            M9  90.35774385    NA\n96  2016-08-01            M8  89.80933349    NA\n97  2016-07-01            M7  89.55691448    NA\n98  2016-06-01            M6  89.32402789    NA\n99  2016-05-01            M5  89.22561452    NA\n100 2016-04-01            M4  89.62527796    NA\n101 2016-03-01            M3  89.91000060    NA\n102 2016-02-01            M2  89.77778112    NA\n103 2016-01-01            M1  89.38638139    NA\n104 2015-12-01           M12  89.04681772    NA\n105 2015-11-01           M11  88.68546788    NA\n106 2015-10-01           M10  88.20391850    NA\n107 2015-09-01            M9  87.75241902    NA\n108 2015-08-01            M8  87.42487529    NA\n109 2015-07-01            M7  87.24081976    NA\n110 2015-06-01            M6  87.11310776    NA\n111 2015-05-01            M5  86.96736583    NA\n112 2015-04-01            M4  87.40384038    NA\n113 2015-03-01            M3  87.63071699    NA\n114 2015-02-01            M2  87.27537713    NA\n115 2015-01-01            M1  87.11010277    NA\n116 2014-12-01           M12  87.18898371    NA\n117 2014-11-01           M11  86.76377787    NA\n118 2014-10-01           M10  86.06962558    NA\n119 2014-09-01            M9  85.59633992    NA\n120 2014-08-01            M8  85.21996514    NA\n121 2014-07-01            M7  84.91495883    NA\n122 2014-06-01            M6  84.68207224    NA\n123 2014-05-01            M5  84.53557906    NA\n124 2014-04-01            M4  84.80677925    NA\n125 2014-03-01            M3  84.96529239    NA\n126 2014-02-01            M2  84.73315704    NA\n127 2014-01-01            M1  84.51905163    NA\n128 2013-12-01           M12  83.77005830    NA\n129 2013-11-01           M11  83.29226516    NA\n130 2013-10-01           M10  82.52298816    NA\n131 2013-09-01            M9  82.13233968    NA\n132 2013-08-01            M8  81.82432839    NA\n133 2013-07-01            M7  81.59219304    NA\n134 2013-06-01            M6  81.61923793    NA\n135 2013-05-01            M5  81.66882024    NA\n136 2013-04-01            M4  81.94152293    NA\n137 2013-03-01            M3  81.88743314    NA\n138 2013-02-01            M2  81.29094297    NA\n139 2013-01-01            M1  80.89278202    NA\n140 2012-12-01           M12  80.56824328    NA\n141 2012-11-01           M11  80.38343650    NA\n142 2012-10-01           M10  79.84103612    NA\n143 2012-09-01            M9  79.43911894    NA\n144 2012-08-01            M8  79.09054030    NA\n145 2012-07-01            M7  78.85389747    NA\n146 2012-06-01            M6  78.41366669    NA\n147 2012-05-01            M5  78.05381934    NA\n148 2012-04-01            M4  78.30097963    NA\n149 2012-03-01            M3  78.54738867    NA\n150 2012-02-01            M2  78.50231384    NA\n151 2012-01-01            M1  78.34304946    NA\n152 2011-12-01           M12  77.79238536    NA\n153 2011-11-01           M11  77.15833283    NA\n154 2011-10-01           M10  76.33271230    NA\n155 2011-09-01            M9  75.82111305    NA\n156 2011-08-01            M8  75.63555502    NA\n157 2011-07-01            M7  75.51610674    NA\n158 2011-06-01            M6  75.15550814    NA\n159 2011-05-01            M5  75.15926438    NA\n160 2011-04-01            M4  75.71744095    NA\n161 2011-03-01            M3  75.72345093    NA\n162 2011-02-01            M2  75.57846024    NA\n163 2011-01-01            M1  75.29599135    NA\n164 2010-12-01           M12  74.93095445    NA\n165 2010-11-01           M11  74.56158125    NA\n166 2010-10-01           M10  73.96892635    NA\n167 2010-09-01            M9  73.51511019    NA\n168 2010-08-01            M8  73.13174950    NA\n169 2010-07-01            M7  72.92919000    NA\n170 2010-06-01            M6  72.77118323    NA\n171 2010-05-01            M5  72.79397765    NA\n172 2010-04-01            M4  73.25556464    NA\n173 2010-03-01            M3  73.48972549    NA\n174 2010-02-01            M2  72.97167051    NA\n175 2010-01-01            M1  72.55204598    NA\n176 2009-12-01           M12  71.77185517    NA\n177 2009-11-01           M11  71.47604578    NA\n178 2009-10-01           M10  71.10719063    NA\n179 2009-09-01            M9  70.89271587    NA\n180 2009-08-01            M8  70.53888432    NA\n181 2009-07-01            M7  70.37051645    NA\n182 2009-06-01            M6  70.17935416    NA\n183 2009-05-01            M5  70.05035847    NA\n184 2009-04-01            M4  70.25499019    NA\n185 2009-03-01            M3  70.00995018    NA\n186 2009-02-01            M2  69.60949368    NA\n187 2009-01-01            M1  69.45614941    NA\n188 2008-12-01           M12  69.29555236    NA\n189 2008-11-01           M11  68.81894178    NA\n190 2008-10-01           M10  68.04548569    NA\n191 2008-09-01            M9  67.58493481    NA\n192 2008-08-01            M8  67.12749227    NA\n193 2008-07-01            M7  66.74205936    NA\n194 2008-06-01            M6  66.37216810    NA\n195 2008-05-01            M5  66.09863507    NA\n196 2008-04-01            M4  66.17012666    NA\n197 2008-03-01            M3  66.01989072    NA\n198 2008-02-01            M2  65.54483430    NA\n199 2008-01-01            M1  65.35056368    NA\n200 2007-12-01           M12  65.04905568    NA\n201 2007-11-01           M11  64.78122126    NA\n202 2007-10-01           M10  64.32740509    NA\n203 2007-09-01            M9  64.07770259    NA\n204 2007-08-01            M8  63.58399619    NA\n205 2007-07-01            M7  63.32600481    NA\n206 2007-06-01            M6  63.05817039    NA\n207 2007-05-01            M5  62.98253436    NA\n208 2007-04-01            M4  63.29129513    NA\n209 2007-03-01            M3  63.32911314    NA\n210 2007-02-01            M2  63.19234663    NA\n211 2007-01-01            M1  63.01620793    NA\n212 2006-12-01           M12  62.69242357    NA\n213 2006-11-01           M11  62.33185730    NA\n214 2006-10-01           M10  62.00651878    NA\n215 2006-09-01            M9  61.73661213    NA\n216 2006-08-01            M8  61.11960865    NA\n217 2006-07-01            M7  60.80929371    NA\n218 2006-06-01            M6  60.64299806    NA\n219 2006-05-01            M5  60.59067451    NA\n220 2006-04-01            M4  60.86161727    NA\n221 2006-03-01            M3  60.77251181    NA\n222 2006-02-01            M2  60.69635773    NA\n223 2006-01-01            M1  60.60362589    NA\n224 2005-12-01           M12  60.25031239    NA\n225 2005-11-01           M11  59.88249335    NA\n226 2005-10-01           M10  59.45457994    NA\n227 2005-09-01            M9  59.30900649    NA\n228 2005-08-01            M8  59.07225536    NA\n229 2005-07-01            M7  59.00179988    NA\n230 2005-06-01            M6  58.77178347    NA\n231 2005-05-01            M5  58.82825146    NA\n232 2005-04-01            M4  58.97641519    NA\n233 2005-03-01            M3  58.76712098    NA\n234 2005-02-01            M2  58.50343099    NA\n235 2005-01-01            M1  58.30916037    NA\n236 2004-12-01           M12  58.30708815    NA\n237 2004-11-01           M11  58.18689940    NA\n238 2004-10-01           M10  57.69474717    NA\n239 2004-09-01            M9  57.29791705    NA\n240 2004-08-01            M8  56.82804118    NA\n241 2004-07-01            M7  56.47939018    NA\n242 2004-06-01            M6  56.33174451    NA\n243 2004-05-01            M5  56.24160294    NA\n244 2004-04-01            M4  56.38303195    NA\n245 2004-03-01            M3  56.29807094    NA\n246 2004-02-01            M2  56.10794476    NA\n247 2004-01-01            M1  55.77431735    NA\n248 2003-12-01           M12  55.42981079    NA\n249 2003-11-01           M11  55.19254161    NA\n250 2003-10-01           M10  54.73820739    NA\n251 2003-09-01            M9  54.53823816    NA\n252 2003-08-01            M8  54.21548991    NA\n253 2003-07-01            M7  54.05333870    NA\n254 2003-06-01            M6  53.97511240    NA\n255 2003-05-01            M5  53.93055967    NA\n256 2003-04-01            M4  54.10514420    NA\n257 2003-03-01            M3  54.01293041    NA\n258 2003-02-01            M2  53.67412245    NA\n259 2003-01-01            M1  53.52544068    NA\n260 2002-12-01           M12  53.30992980    NA\n261 2002-11-01           M11  53.07887728    NA\n262 2002-10-01           M10  52.65303609    NA\n263 2002-09-01            M9  52.42198356    NA\n264 2002-08-01            M8  52.10856030    NA\n265 2002-07-01            M7  51.91118135    NA\n266 2002-06-01            M6  51.76258618    NA\n267 2002-05-01            M5  51.51142923    NA\n268 2002-04-01            M4  51.40723497    NA\n269 2002-03-01            M3  51.12794844    NA\n270 2002-02-01            M2  50.86774985    NA\n271 2002-01-01            M1  50.90047201    NA\n272 2001-12-01           M12  50.43489879    NA\n273 2001-11-01           M11  50.36514891    NA\n274 2001-10-01           M10  50.17613537    NA\n275 2001-09-01            M9  49.95038115    NA\n276 2001-08-01            M8  49.48968755    NA\n277 2001-07-01            M7  49.19820196    NA\n278 2001-06-01            M6  49.32636377    NA\n279 2001-05-01            M5  49.20997046    NA\n280 2001-04-01            M4  49.09730863    NA\n281 2001-03-01            M3  48.85088778    NA\n282 2001-02-01            M2  48.54332816    NA\n283 2001-01-01            M1  48.57547625    NA\n284 2000-12-01           M12  48.30767118    NA\n285 2000-11-01           M11  47.79028786    NA\n286 2000-10-01           M10  47.38513583    NA\n287 2000-09-01            M9  47.06107160    NA\n288 2000-08-01            M8  46.71978519    NA\n289 2000-07-01            M7  46.46446621    NA\n290 2000-06-01            M6  46.28392024    NA\n291 2000-05-01            M5  46.01137907    NA\n292 2000-04-01            M4  45.84001827    NA\n293 2000-03-01            M3  45.58068078    NA\n294 2000-02-01            M2  45.32938031    NA\n295 2000-01-01            M1  44.93083012    NA\n296 1999-12-01           M12  44.33551639    NA\n297 1999-11-01           M11  43.89577645    NA\n298 1999-10-01           M10  43.50885123    NA\n299 1999-09-01            M9  43.23501839    NA\n300 1999-08-01            M8  42.82125526    NA\n301 1999-07-01            M7  42.58157977    NA\n302 1999-06-01            M6  42.30200620    NA\n303 1999-05-01            M5  42.02587708    NA\n304 1999-04-01            M4  41.77457661    NA\n305 1999-03-01            M3  41.39468378    NA\n306 1999-02-01            M2  41.01364281    NA\n307 1999-01-01            M1  40.46977028    NA\n308 1998-12-01           M12  39.47297432    NA\n309 1998-11-01           M11  38.53278623    NA\n310 1998-10-01           M10  37.86226893    NA\n311 1998-09-01            M9  37.32737639    NA\n312 1998-08-01            M8  36.73163210    NA\n313 1998-07-01            M7  36.38187811    NA\n314 1998-06-01            M6  36.03442041    NA\n315 1998-05-01            M5  35.61348136    NA\n316 1998-04-01            M4  35.33204206    NA\n317 1998-03-01            M3  35.00453340    NA\n318 1998-02-01            M2  34.59923784    NA\n319 1998-01-01            M1  34.00392411    NA\n320 1997-12-01           M12  33.27987451    NA\n321 1997-11-01           M11  32.82004201    NA\n322 1997-10-01           M10  32.45694082    NA\n323 1997-09-01            M9  32.19961259    NA\n324 1997-08-01            M8  31.80350220    NA\n325 1997-07-01            M7  31.52321104    NA\n326 1997-06-01            M6  31.25095691    NA\n327 1997-05-01            M5  30.97611945    NA\n328 1997-04-01            M4  30.69597181    NA\n329 1997-03-01            M3  30.36788907    NA\n330 1997-02-01            M2  29.99459809    NA\n331 1997-01-01            M1  29.49888603    NA\n332 1996-12-01           M12  28.75933645    NA\n333 1996-11-01           M11  27.86708345    NA\n334 1996-10-01           M10  27.45116754    NA\n335 1996-09-01            M9  27.11275149    NA\n336 1996-08-01            M8  26.68607171    NA\n337 1996-07-01            M7  26.33603069    NA\n338 1996-06-01            M6  25.96690173    NA\n339 1996-05-01            M5  25.55084230    NA\n340 1996-04-01            M4  25.09344962    NA\n341 1996-03-01            M3  24.39982588    NA\n342 1996-02-01            M2  23.87426203    NA\n343 1996-01-01            M1  23.32975376    NA\n344 1995-12-01           M12  22.52016727    NA\n345 1995-11-01           M11  21.80960838    NA\n346 1995-10-01           M10  21.28476212    NA\n347 1995-09-01            M9  20.85564253    NA\n348 1995-08-01            M8  20.43298127    NA\n349 1995-07-01            M7  20.09958836    NA\n350 1995-06-01            M6  19.69802427    NA\n351 1995-05-01            M5  19.09209019    NA\n352 1995-04-01            M4  18.32613326    NA\n353 1995-03-01            M3  16.97361720    NA\n354 1995-02-01            M2  16.02870735    NA\n355 1995-01-01            M1  15.37699094    NA\n356 1994-12-01           M12  14.81920437    NA\n357 1994-11-01           M11  14.69036086    NA\n358 1994-10-01           M10  14.61224530    NA\n359 1994-09-01            M9  14.53593664    NA\n360 1994-08-01            M8  14.43328665    NA\n361 1994-07-01            M7  14.36632677    NA\n362 1994-06-01            M6  14.30289457    NA\n363 1994-05-01            M5  14.23168224    NA\n364 1994-04-01            M4  14.16325130    NA\n365 1994-03-01            M3  14.09422476    NA\n366 1994-02-01            M2  14.02212406    NA\n367 1994-01-01            M1  13.95037498    NA\n368 1993-12-01           M12  13.84305490    NA\n369 1993-11-01           M11  13.73830236    NA\n370 1993-10-01           M10  13.67797303    NA\n371 1993-09-01            M9  13.62226067    NA\n372 1993-08-01            M8  13.52211219    NA\n373 1993-07-01            M7  13.45012344    NA\n374 1993-06-01            M6  13.38579712    NA\n375 1993-05-01            M5  13.31113749    NA\n376 1993-04-01            M4  13.23548040    NA\n377 1993-03-01            M3  13.15959369    NA\n378 1993-02-01            M2  13.08334531    NA\n379 1993-01-01            M1  12.97731976    NA\n380 1992-12-01           M12  12.81655348    NA\n381 1992-11-01           M11  12.63662034    NA\n382 1992-10-01           M10  12.53249354    NA\n383 1992-09-01            M9  12.44289652    NA\n384 1992-08-01            M8  12.33559223    NA\n385 1992-07-01            M7  12.26027241    NA\n386 1992-06-01            M6  12.18334519    NA\n387 1992-05-01            M5  12.10143789    NA\n388 1992-04-01            M4  12.02217132    NA\n389 1992-03-01            M3  11.91594772    NA\n390 1992-02-01            M2  11.79590044    NA\n391 1992-01-01            M1  11.65777847    NA\n392 1991-12-01           M12  11.44967987    NA\n393 1991-11-01           M11  11.18637410    NA\n394 1991-10-01           M10  10.91534274    NA\n395 1991-09-01            M9  10.78985037    NA\n396 1991-08-01            M8  10.68342298    NA\n397 1991-07-01            M7  10.60958427    NA\n398 1991-06-01            M6  10.51664758    NA\n399 1991-05-01            M5  10.40744167    NA\n400 1991-04-01            M4  10.30668755    NA\n401 1991-03-01            M3  10.19983964    NA\n402 1991-02-01            M2  10.05642472    NA\n403 1991-01-01            M1   9.88387989    NA\n404 1990-12-01           M12   9.63821395    NA\n405 1990-11-01           M11   9.34372310    NA\n406 1990-10-01           M10   9.10205989    NA\n407 1990-09-01            M9   8.97306137    NA\n408 1990-08-01            M8   8.84695044    NA\n409 1990-07-01            M7   8.69873483    NA\n410 1990-06-01            M6   8.54293859    NA\n411 1990-05-01            M5   8.35883768    NA\n412 1990-04-01            M4   8.21547155    NA\n413 1990-03-01            M3   8.09230992    NA\n414 1990-02-01            M2   7.95211985    NA\n415 1990-01-01            M1   7.77603730    NA\n416 1989-12-01           M12   7.41802958    NA\n417 1989-11-01           M11   7.17585544    NA\n418 1989-10-01           M10   7.07652502    NA\n419 1989-09-01            M9   6.97339280    NA\n420 1989-08-01            M8   6.90733278    NA\n421 1989-07-01            M7   6.84214822    NA\n422 1989-06-01            M6   6.77438464    NA\n423 1989-05-01            M5   6.69309877    NA\n424 1989-04-01            M4   6.60222444    NA\n425 1989-03-01            M3   6.50494490    NA\n426 1989-02-01            M2   6.43518354    NA\n427 1989-01-01            M1   6.34902379    NA\n428 1988-12-01           M12   6.19731639    NA\n429 1988-11-01           M11   6.07065435    NA\n430 1988-10-01           M10   5.99048648    NA\n431 1988-09-01            M9   5.94513902    NA\n432 1988-08-01            M8   5.91134334    NA\n433 1988-07-01            M7   5.85745654    NA\n434 1988-06-01            M6   5.76129214    NA\n435 1988-05-01            M5   5.64610869    NA\n436 1988-04-01            M4   5.53894074    NA\n437 1988-03-01            M3   5.37354743    NA\n438 1988-02-01            M2   5.11178304    NA\n439 1988-01-01            M1   4.71824594    NA\n440 1987-12-01           M12   4.08639246    NA\n441 1987-11-01           M11   3.56051142    NA\n442 1987-10-01           M10   3.29884463    NA\n443 1987-09-01            M9   3.04508139    NA\n444 1987-08-01            M8   2.85687155    NA\n445 1987-07-01            M7   2.64102153    NA\n446 1987-06-01            M6   2.44314573    NA\n447 1987-05-01            M5   2.27832506    NA\n448 1987-04-01            M4   2.11860646    NA\n449 1987-03-01            M3   1.94815270    NA\n450 1987-02-01            M2   1.82738639    NA\n451 1987-01-01            M1   1.70440129    NA\n452 1986-12-01           M12   1.57673463    NA\n453 1986-11-01           M11   1.46130432    NA\n454 1986-10-01           M10   1.36882403    NA\n455 1986-09-01            M9   1.29481167    NA\n456 1986-08-01            M8   1.22153124    NA\n457 1986-07-01            M7   1.13133289    NA\n458 1986-06-01            M6   1.07756664    NA\n459 1986-05-01            M5   1.01257010    NA\n460 1986-04-01            M4   0.95926311    NA\n461 1986-03-01            M3   0.91166672    NA\n462 1986-02-01            M2   0.87117448    NA\n463 1986-01-01            M1   0.83409223    NA\n464 1985-12-01           M12   0.76634013    NA\n465 1985-11-01           M11   0.71749512    NA\n466 1985-10-01           M10   0.68585222    NA\n467 1985-09-01            M9   0.66075231    NA\n468 1985-08-01            M8   0.63537685    NA\n469 1985-07-01            M7   0.60876282    NA\n470 1985-06-01            M6   0.58827559    NA\n471 1985-05-01            M5   0.57390224    NA\n472 1985-04-01            M4   0.56062106    NA\n473 1985-03-01            M3   0.54388540    NA\n474 1985-02-01            M2   0.52359622    NA\n475 1985-01-01            M1   0.50271145    NA\n476 1984-12-01           M12   0.46799582    NA\n477 1984-11-01           M11   0.44892941    NA\n478 1984-10-01           M10   0.43403365    NA\n479 1984-09-01            M9   0.41938044    NA\n480 1984-08-01            M8   0.40724884    NA\n481 1984-07-01            M7   0.39599271    NA\n482 1984-06-01            M6   0.38342338    NA\n483 1984-05-01            M5   0.37003169    NA\n484 1984-04-01            M4   0.35815555    NA\n485 1984-03-01            M3   0.34330428    NA\n486 1984-02-01            M2   0.32923232    NA\n487 1984-01-01            M1   0.31272772    NA\n488 1983-12-01           M12   0.29404738    NA\n489 1983-11-01           M11   0.28198324    NA\n490 1983-10-01           M10   0.26634118    NA\n491 1983-09-01            M9   0.25778750    NA\n492 1983-08-01            M8   0.25009061    NA\n493 1983-07-01            M7   0.24074613    NA\n494 1983-06-01            M6   0.22940389    NA\n495 1983-05-01            M5   0.22103390    NA\n496 1983-04-01            M4   0.21184586    NA\n497 1983-03-01            M3   0.19923205    NA\n498 1983-02-01            M2   0.19003396    NA\n499 1983-01-01            M1   0.18035509    NA\n500 1982-12-01           M12   0.16265642    NA\n501 1982-11-01           M11   0.14696270    NA\n502 1982-10-01           M10   0.13989012    NA\n503 1982-09-01            M9   0.13299550    NA\n504 1982-08-01            M8   0.12625588    NA\n505 1982-07-01            M7   0.11351720    NA\n506 1982-06-01            M6   0.10795443    NA\n507 1982-05-01            M5   0.10299301    NA\n508 1982-04-01            M4   0.09751204    NA\n509 1982-03-01            M3   0.09249895    NA\n510 1982-02-01            M2   0.08923965    NA\n511 1982-01-01            M1   0.08586554    NA\n512 1981-12-01           M12   0.08180110    NA\n513 1981-11-01           M11   0.07965694    NA\n514 1981-10-01           M10   0.07815287    NA\n515 1981-09-01            M9   0.07645648    NA\n516 1981-08-01            M8   0.07506005    NA\n517 1981-07-01            M7   0.07354449    NA\n518 1981-06-01            M6   0.07227149    NA\n519 1981-05-01            M5   0.07127547    NA\n520 1981-04-01            M4   0.07021344    NA\n521 1981-03-01            M3   0.06866487    NA\n522 1981-02-01            M2   0.06722682    NA\n523 1981-01-01            M1   0.06561511    NA\n524 1980-12-01           M12   0.06356711    NA\n525 1980-11-01           M11   0.06194248    NA\n526 1980-10-01           M10   0.06088618    NA\n527 1980-09-01            M9   0.05997772    NA\n528 1980-08-01            M8   0.05931896    NA\n529 1980-07-01            M7   0.05811485    NA\n530 1980-06-01            M6   0.05653615    NA\n531 1980-05-01            M5   0.05543680    NA\n532 1980-04-01            M4   0.05454698    NA\n533 1980-03-01            M3   0.05360981    NA\n534 1980-02-01            M2   0.05252912    NA\n535 1980-01-01            M1   0.05134222    NA\n536 1979-12-01           M12   0.04895551    NA\n537 1979-11-01           M11   0.04810445    NA\n538 1979-10-01           M10   0.04749306    NA\n539 1979-09-01            M9   0.04667788    NA\n540 1979-08-01            M8   0.04611242    NA\n541 1979-07-01            M7   0.04542496    NA\n542 1979-06-01            M6   0.04488103    NA\n543 1979-05-01            M5   0.04438876    NA\n544 1979-04-01            M4   0.04381469    NA\n545 1979-03-01            M3   0.04342575    NA\n546 1979-02-01            M2   0.04284450    NA\n547 1979-01-01            M1   0.04223742    NA\n548 1978-12-01           M12   0.04078932    NA\n549 1978-11-01           M11   0.04044631    NA\n550 1978-10-01           M10   0.04003442    NA\n551 1978-09-01            M9   0.03955507    NA\n552 1978-08-01            M8   0.03910873    NA\n553 1978-07-01            M7   0.03872266    NA\n554 1978-06-01            M6   0.03807683    NA\n555 1978-05-01            M5   0.03756016    NA\n556 1978-04-01            M4   0.03719563    NA\n557 1978-03-01            M3   0.03678660    NA\n558 1978-02-01            M2   0.03640771    NA\n559 1978-01-01            M1   0.03589248    NA\n560 1977-12-01           M12   0.03511174    NA\n561 1977-11-01           M11   0.03463239    NA\n562 1977-10-01           M10   0.03425781    NA\n563 1977-09-01            M9   0.03399804    NA\n564 1977-08-01            M8   0.03340531    NA\n565 1977-07-01            M7   0.03273365    NA\n566 1977-06-01            M6   0.03236767    NA\n567 1977-05-01            M5   0.03197587    NA\n568 1977-04-01            M4   0.03169744    NA\n569 1977-03-01            M3   0.03122527    NA\n570 1977-02-01            M2   0.03068994    NA\n571 1977-01-01            M1   0.03002689    NA\n572 1976-12-01           M12   0.02909976    NA\n573 1976-11-01           M11   0.02838791    NA\n574 1976-10-01           M10   0.02716083    NA\n575 1976-09-01            M9   0.02571273    NA\n576 1976-08-01            M8   0.02486454    NA\n577 1976-07-01            M7   0.02462917    NA\n578 1976-06-01            M6   0.02442250    NA\n579 1976-05-01            M5   0.02432491    NA\n580 1976-04-01            M4   0.02415556    NA\n581 1976-03-01            M3   0.02398764    NA\n582 1976-02-01            M2   0.02375514    NA\n583 1976-01-01            M1   0.02331885    NA\n584 1975-12-01           M12   0.02287681    NA\n585 1975-11-01           M11   0.02269167    NA\n586 1975-10-01           M10   0.02253380    NA\n587 1975-09-01            M9   0.02241898    NA\n588 1975-08-01            M8   0.02225681    NA\n589 1975-07-01            M7   0.02206593    NA\n590 1975-06-01            M6   0.02189084    NA\n591 1975-05-01            M5   0.02152487    NA\n592 1975-04-01            M4   0.02124070    NA\n593 1975-03-01            M3   0.02106274    NA\n594 1975-02-01            M2   0.02093070    NA\n595 1975-01-01            M1   0.02081589    NA\n596 1974-12-01           M12   0.02055325    NA\n597 1974-11-01           M11   0.02039394    NA\n598 1974-10-01           M10   0.01984283    NA\n599 1974-09-01            M9   0.01945677    NA\n600 1974-08-01            M8   0.01923862    NA\n601 1974-07-01            M7   0.01903770    NA\n602 1974-06-01            M6   0.01876645    NA\n603 1974-05-01            M5   0.01858275    NA\n604 1974-04-01            M4   0.01843779    NA\n605 1974-03-01            M3   0.01819094    NA\n606 1974-02-01            M2   0.01805172    NA\n607 1974-01-01            M1   0.01765274    NA\n608 1973-12-01           M12   0.01704279    NA\n609 1973-11-01           M11   0.01640557    NA\n610 1973-10-01           M10   0.01620608    NA\n611 1973-09-01            M9   0.01600085    NA\n612 1973-08-01            M8   0.01562914    NA\n613 1973-07-01            M7   0.01538229    NA\n614 1973-06-01            M6   0.01499766    NA\n615 1973-05-01            M5   0.01487567    NA\n616 1973-04-01            M4   0.01471923    NA\n617 1973-03-01            M3   0.01448960    NA\n618 1973-02-01            M2   0.01436331    NA\n619 1973-01-01            M1   0.01424562    NA\n620 1972-12-01           M12   0.01404183    NA\n621 1972-11-01           M11   0.01399446    NA\n622 1972-10-01           M10   0.01390405    NA\n623 1972-09-01            M9   0.01389400    NA\n624 1972-08-01            M8   0.01383086    NA\n625 1972-07-01            M7   0.01374044    NA\n626 1972-06-01            M6   0.01368877    NA\n627 1972-05-01            M5   0.01358831    NA\n628 1972-04-01            M4   0.01356104    NA\n629 1972-03-01            M3   0.01347637    NA\n630 1972-02-01            M2   0.01340317    NA\n631 1972-01-01            M1   0.01336155    NA\n632 1971-12-01           M12   0.01330271    NA\n633 1971-11-01           M11   0.01323956    NA\n634 1971-10-01           M10   0.01321803    NA\n635 1971-09-01            M9   0.01320511    NA\n636 1971-08-01            M8   0.01316206    NA\n637 1971-07-01            M7   0.01304294    NA\n638 1971-06-01            M6   0.01305299    NA\n639 1971-05-01            M5   0.01299415    NA\n640 1971-04-01            M4   0.01296687    NA\n641 1971-03-01            M3   0.01290085    NA\n642 1971-02-01            M2   0.01285206    NA\n643 1971-01-01            M1   0.01279896    NA\n644 1970-12-01           M12   0.01267410    NA\n645 1970-11-01           M11   0.01256789    NA\n646 1970-10-01           M10   0.01250044    NA\n647 1970-09-01            M9   0.01249613    NA\n648 1970-08-01            M8   0.01246599    NA\n649 1970-07-01            M7   0.01240859    NA\n650 1970-06-01            M6   0.01234831    NA\n651 1970-05-01            M5   0.01227368    NA\n652 1970-04-01            M4   0.01224785    NA\n653 1970-03-01            M3   0.01223206    NA\n654 1970-02-01            M2   0.01219618    NA\n655 1970-01-01            M1   0.01219761    NA\n656 1969-12-01           M12   0.01210576    NA\n657 1969-11-01           M11   0.01201535    NA\n658 1969-10-01           M10   0.01201391    NA\n659 1969-09-01            M9   0.01188905    NA\n660 1969-08-01            M8   0.01177854    NA\n661 1969-07-01            M7   0.01176562    NA\n662 1969-06-01            M6   0.01172113    NA\n663 1969-05-01            M5   0.01167951    NA\n664 1969-04-01            M4   0.01167951    NA\n665 1969-03-01            M3   0.01164794    NA\n666 1969-02-01            M2   0.01163646    NA\n667 1969-01-01            M1   0.01159484    NA\n\n\nPodemos guardar esta consulta en un objeto y luego graficar\n\nconsulta1&lt;-inegi_series(serie=628194, # IPC mensual\n                        token = token)\n\nHacemos un gráfico:\n\nconsulta1 %&gt;% \n  ggplot()+\n  aes(x=as_date(date),\n      y=values) +\n  geom_line()"
  },
  {
    "objectID": "P4.html#consulta-general",
    "href": "P4.html#consulta-general",
    "title": "4  API INEGI y Banxico",
    "section": "4.5 Consulta general",
    "text": "4.5 Consulta general\nPara poder bajar los otros indicadores tenemos un codigo un poco más complicado\n[Este código fue inspirado por este de acá https://github.com/claudiodanielpc/medium/blob/main/api_inegi_bie.R]\nVamos a hacer una función que nos haga la consulta:\n\nurl1 &lt;-\"https://www.inegi.org.mx/app/api/indicadores/desarrolladores/jsonxml/INDICATOR/\"\nurl2 &lt;-\"/es/0700/false/BISE/2.0/\"\nurl3&lt;- \"?type=json\"\n\n#funcion\n\nconsulta_api&lt;- function(token,indicador){\n  url&lt;-paste0(url1,indicador,url2,token, url3)\n  res=GET(url)\n  resultado &lt;-content(res, as = 'text')%&gt;%\n  fromJSON()%&gt;%\n  #Se extrae elemento \"Series\"\n  pluck(\"Series\")%&gt;%\n  #Se extraen el elemento \"OBSERVATIONS\" que es aquel que contiene los datos\n  pluck(\"OBSERVATIONS\")%&gt;%\n  #Se transforma a dataframe y se limpian los nombres\n  as.data.frame()%&gt;%\n  janitor::clean_names() %&gt;% \n  #Se seleccionan las variables requeridas\n  select(time_period, obs_value)%&gt;%\n  #Se transforman a numérico \n  mutate_all(as.numeric)\n  \n  return(resultado)\n}\n\nCheca que dejo url que se pueda cambiar por si cambia el sistema de consulta.\nVamos a ver si funciona:\n\nconsulta_api(token=token,\n             indicador = \"1002000001\") # este es población en general\n\n   time_period obs_value\n1         1910  15160369\n2         1921  14334780\n3         1930  16552722\n4         1940  19653552\n5         1950  25791017\n6         1960  34923129\n7         1970  48225238\n8         1980  66846833\n9         1990  81249645\n10        1995  91158290\n11        2000  97483412\n12        2005 103263388\n13        2010 112336538\n14        2015 119938473\n15        2020 126014024\n\n\nguardamos nuestra consulta en un objeto y graficamos\n\nconsulta2&lt;-consulta_api(token=token,\n             indicador = \"1002000001\") # este es población en general\n\n\ngploba&lt;-consulta2 %&gt;% \n  ggplot(aes(x=time_period, y=obs_value/1000000))+\n  geom_line() + \n  theme_light()+\n  labs(x=\"Año censal\",\n       y=\"Millones de personas\",\n       title=\"Población en México\") \n\ngploba"
  },
  {
    "objectID": "P4.html#plotly",
    "href": "P4.html#plotly",
    "title": "4  API INEGI y Banxico",
    "section": "4.6 {plotly}",
    "text": "4.6 {plotly}\nVamos a hacerlo interactivo con {plotly} Este paquete vuelve interactivo cualquier grafico, pero lo exporta como html\n\ninteractivo&lt;-ggplotly(gploba)\ninteractivo"
  },
  {
    "objectID": "P4.html#consulta-siebanxicor",
    "href": "P4.html#consulta-siebanxicor",
    "title": "4  API INEGI y Banxico",
    "section": "4.7 Consulta {siebanxicor}",
    "text": "4.7 Consulta {siebanxicor}\n\n4.7.1 Token otra vez\ntoken2 &lt;-\"aquí va tu token\"\n\n\nsiebanxicor::setToken(token2)\n\n\n\n4.7.2 Consultas\nHay varios tipos de series, checa la disponibilidad\nCatálogo de series\nPodemos navegar sobre los catálogos y podemos obtener una ficha parecida a esta\n[]\n\nmis_series &lt;- c(\"SR17645\", #precios mercado\n               \"SR17575\", #precios 2018\n               \"SR17622\") # desestacionalidazo\n\nVamos a revisar la información de estos datos\n\nmetadata &lt;- getSeriesMetadata(mis_series)\n\nCon esta información sabemos la disponibilidad de la información\n\npibs &lt;- getSeriesData(mis_series, \"2000-01-01\", \"2024-09-30\")\n\n\npib1 &lt;- getSerieDataFrame(pibs,mis_series[1])\npib2 &lt;- getSerieDataFrame(pibs,mis_series[2])\npib3 &lt;- getSerieDataFrame(pibs,mis_series[3])\n\n\nplot(pib1)"
  },
  {
    "objectID": "P4.html#series-de-tiempo---introducción",
    "href": "P4.html#series-de-tiempo---introducción",
    "title": "4  API INEGI y Banxico",
    "section": "4.8 Series de tiempo - introducción",
    "text": "4.8 Series de tiempo - introducción\n\npib1_ts&lt;-ts(pib1$value, \n            frequency = 4, \n            start=c(2001,1))\n\n\nplot.ts(pib1_ts)\n\n\n\n\n\nplot(base::diff(pib1_ts,  lag = 1, differences = 1))"
  },
  {
    "objectID": "P5.html#paquetes",
    "href": "P5.html#paquetes",
    "title": "5  Regresión lineal - intro",
    "section": "5.1 Paquetes",
    "text": "5.1 Paquetes\n\nif(!require(\"pacman\")) install.packages(\"pacman\")\n\nCargando paquete requerido: pacman\n\npacman::p_load(tidyverse,\n               haven,\n               performance, \n               janitor,\n               broom,\n               jtools)"
  },
  {
    "objectID": "P5.html#datos",
    "href": "P5.html#datos",
    "title": "5  Regresión lineal - intro",
    "section": "5.2 Datos",
    "text": "5.2 Datos\n\nconcentradohogar &lt;- haven::read_dta(\"datos/concentradohogar.dta\")\n\nnames(concentradohogar)\n\n  [1] \"folioviv\"   \"foliohog\"   \"ubica_geo\"  \"tam_loc\"    \"est_socio\" \n  [6] \"est_dis\"    \"upm\"        \"factor\"     \"clase_hog\"  \"sexo_jefe\" \n [11] \"edad_jefe\"  \"educa_jefe\" \"tot_integ\"  \"hombres\"    \"mujeres\"   \n [16] \"mayores\"    \"menores\"    \"p12_64\"     \"p65mas\"     \"ocupados\"  \n [21] \"percep_ing\" \"perc_ocupa\" \"ing_cor\"    \"ingtrab\"    \"trabajo\"   \n [26] \"sueldos\"    \"horas_extr\" \"comisiones\" \"aguinaldo\"  \"indemtrab\" \n [31] \"otra_rem\"   \"remu_espec\" \"negocio\"    \"noagrop\"    \"industria\" \n [36] \"comercio\"   \"servicios\"  \"agrope\"     \"agricolas\"  \"pecuarios\" \n [41] \"reproducc\"  \"pesca\"      \"otros_trab\" \"rentas\"     \"utilidad\"  \n [46] \"arrenda\"    \"transfer\"   \"jubilacion\" \"becas\"      \"donativos\" \n [51] \"remesas\"    \"bene_gob\"   \"transf_hog\" \"trans_inst\" \"estim_alqu\"\n [56] \"otros_ing\"  \"gasto_mon\"  \"alimentos\"  \"ali_dentro\" \"cereales\"  \n [61] \"carnes\"     \"pescado\"    \"leche\"      \"huevo\"      \"aceites\"   \n [66] \"tuberculo\"  \"verduras\"   \"frutas\"     \"azucar\"     \"cafe\"      \n [71] \"especias\"   \"otros_alim\" \"bebidas\"    \"ali_fuera\"  \"tabaco\"    \n [76] \"vesti_calz\" \"vestido\"    \"calzado\"    \"vivienda\"   \"alquiler\"  \n [81] \"pred_cons\"  \"agua\"       \"energia\"    \"limpieza\"   \"cuidados\"  \n [86] \"utensilios\" \"enseres\"    \"salud\"      \"atenc_ambu\" \"hospital\"  \n [91] \"medicinas\"  \"transporte\" \"publico\"    \"foraneo\"    \"adqui_vehi\"\n [96] \"mantenim\"   \"refaccion\"  \"combus\"     \"comunica\"   \"educa_espa\"\n[101] \"educacion\"  \"esparci\"    \"paq_turist\" \"personales\" \"cuida_pers\"\n[106] \"acces_pers\" \"otros_gas\"  \"transf_gas\" \"percep_tot\" \"retiro_inv\"\n[111] \"prestamos\"  \"otras_perc\" \"ero_nm_viv\" \"ero_nm_hog\" \"erogac_tot\"\n[116] \"cuota_viv\"  \"mater_serv\" \"material\"   \"servicio\"   \"deposito\"  \n[121] \"prest_terc\" \"pago_tarje\" \"deudas\"     \"balance\"    \"otras_erog\"\n[126] \"smg\"       \n\n\nPara este ejercicio asumiremos y -&gt; ingresos corrientes x -&gt; edad del jefe"
  },
  {
    "objectID": "P5.html#análisis-descriptivo-univariado",
    "href": "P5.html#análisis-descriptivo-univariado",
    "title": "5  Regresión lineal - intro",
    "section": "5.3 Análisis descriptivo univariado",
    "text": "5.3 Análisis descriptivo univariado\n\n5.3.1 Con base::summary\n\nconcentradohogar %&gt;% \n  select(edad_jefe, ing_cor) %&gt;% \n  summary() # comando \"listo\"\n\n   edad_jefe         ing_cor       \n Min.   : 13.00   Min.   :      0  \n 1st Qu.: 39.00   1st Qu.:  28386  \n Median : 50.00   Median :  46074  \n Mean   : 51.23   Mean   :  61490  \n 3rd Qu.: 63.00   3rd Qu.:  74344  \n Max.   :109.00   Max.   :7153770  \n\n\n\n\n5.3.2 Con dplyr::summarise\nNos da un tibble que vamos a poder modificarlo\nPodemos crear columnas con indicadores\n\nconcentradohogar %&gt;% \n  dplyr::summarise(media_ing = mean(ing_cor), \n                   mediana_ing = median(ing_cor), \n                   min_ing=min(ing_cor), \n                   max_ing=max(ing_cor), \n                   q1=quantile(ing_cor, probs = 0.25), \n                   q3=quantile(ing_cor, probs = 0.75)) -&gt; descriptivos_ingreso\n\nTambién podemos agregar filas:\n\nconcentradohogar %&gt;% \n  group_by(sexo_jefe) %&gt;% # las categorías del grupo se vuelven filas en mi table\n  dplyr::summarise(media_ing = mean(ing_cor), \n                   mediana_ing = median(ing_cor), \n                   min_ing = min(ing_cor), \n                   max_ing = max(ing_cor), \n                   q1 = quantile(ing_cor, probs = 0.25), \n                   q3 = quantile(ing_cor, probs = 0.75), \n                   sd = sd(ing_cor),\n                   mean_edad = mean(edad_jefe)) \n\n# A tibble: 2 × 9\n  sexo_jefe media_ing mediana_ing min_ing max_ing     q1     q3     sd mean_edad\n  &lt;chr&gt;         &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n1 1            64378.      47600.       0  7.15e6 29571. 76749. 88680.      50.1\n2 2            55149.      42787.       0  1.03e6 25997. 69181. 47745.      53.7\n\n\n\n\n5.3.3 Gráficos {graphics}\n\nhist(log(concentradohogar$ing_cor)) # base\n\n\n\n\n\n\n5.3.4 Gráficos {ggplot2}\nGrammar of graphics\nRecuerda revisar la cheatsheet aquí\n\nconcentradohogar %&gt;% \n  ggplot2::ggplot() +\n  aes(x=log(ing_cor)) +\n  geom_histogram(bins = 45)\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\nconcentradohogar %&gt;% \n  ggplot2::ggplot() +\n  aes(x=log(ing_cor)) +\n  geom_density()\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "P5.html#análisis-descriptivo-bivariado",
    "href": "P5.html#análisis-descriptivo-bivariado",
    "title": "5  Regresión lineal - intro",
    "section": "5.4 Análisis descriptivo bivariado",
    "text": "5.4 Análisis descriptivo bivariado\nPrimero encontraremos la correlación, asumiendo que usamos todas las variables seleccionadas\n\nconcentradohogar %&gt;% \n  filter(!ing_cor==0) %&gt;% \n  select(edad_jefe, ing_cor, gasto_mon) %&gt;% \n  cor() # correlación de pearson en formato matricial\n\n            edad_jefe     ing_cor   gasto_mon\nedad_jefe  1.00000000 -0.00404064 -0.09318674\ning_cor   -0.00404064  1.00000000  0.53398331\ngasto_mon -0.09318674  0.53398331  1.00000000\n\nconcentradohogar %&gt;% \n  filter(!ing_cor==0) %&gt;% \n  select(edad_jefe, ing_cor, gasto_mon) %&gt;% \n  cor(method = \"spearman\") # correlación\n\n            edad_jefe     ing_cor  gasto_mon\nedad_jefe  1.00000000 -0.03997823 -0.1674359\ning_cor   -0.03997823  1.00000000  0.7267596\ngasto_mon -0.16743588  0.72675964  1.0000000\n\n\nHay tres métodos de correlación.\nCuando queremos explicitar las variables, debemos usar with para poder utiliza nuestros elementos de dplyr:\n\nconcentradohogar %&gt;% \n  filter(!ing_cor==0) %&gt;% \n  select(edad_jefe, ing_cor) %&gt;%\n  with(\n    cor(edad_jefe, log(ing_cor)) # para mezclar cor con tidy hay que usar \"with()\"\n  ) # correlación\n\n[1] -0.0481463\n\n\n\n5.4.1 Scatterplot o gráfico de dispersión\nCon base (no lo vimos en la sesión)\n\nplot(concentradohogar$edad_jefe, log(concentradohogar$ing_cor))\n\n\n\n\nCon {ggplot2}\n\nconcentradohogar %&gt;% \n  filter(ing_cor&gt;0) %&gt;% \n  ggplot2::ggplot() +\n  aes(x = edad_jefe,\n      y = log(ing_cor)) + \n  geom_point()\n\n\n\nconcentradohogar %&gt;% \n  filter(ing_cor&gt;0) %&gt;% \n  ggplot2::ggplot() +\n  aes(x = edad_jefe,\n      y = log(ing_cor), \n      alpha = I(0.05)) + \n  geom_point()\n\n\n\nconcentradohogar %&gt;% \n  filter(ing_cor&gt;0) %&gt;% \n  ggplot2::ggplot() +\n  aes(x = edad_jefe,\n      y = log(ing_cor), \n      alpha = I(0.05)) + \n  geom_point() +\n  geom_smooth(method = lm) #linear model\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.4.2 Línea de MCO\n\nconcentradohogar %&gt;% \n  filter(ing_cor&gt;0) %&gt;% \n  with(\n    lm(log(ing_cor) ~ edad_jefe ) # y ~ x\n  )\n\n\nCall:\nlm(formula = log(ing_cor) ~ edad_jefe)\n\nCoefficients:\n(Intercept)    edad_jefe  \n  10.850589    -0.002255  \n\n# log(y) ~ x -&gt; un cambio de una unidad en x\n# cambiar coeficiente*100\n\nGuardar los resultados en un objeto será más interesante.\n\nconcentradohogar %&gt;% \n  filter(ing_cor&gt;0) %&gt;% \n  with(\n    lm(log(ing_cor) ~ edad_jefe ) # y ~ x\n  ) -&gt; modelo0\n\n\n\n5.4.3 Inferencia\nCon el objeto podemos hacer procesos de inferencia del modelo y además, tener evaluaciónd de supuestos\n\nsummary(modelo0)\n\n\nCall:\nlm(formula = log(ing_cor) ~ edad_jefe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.6979 -0.4828 -0.0006  0.4796  5.0385 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 10.8505890  0.0083612 1297.73   &lt;2e-16 ***\nedad_jefe   -0.0022548  0.0001558  -14.47   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.7444 on 90091 degrees of freedom\nMultiple R-squared:  0.002318,  Adjusted R-squared:  0.002307 \nF-statistic: 209.3 on 1 and 90091 DF,  p-value: &lt; 2.2e-16\n\njtools::export_summs(modelo0)\n\n\n\n\nModel 1\n\n(Intercept)10.85 ***\n\n(0.01)   \n\nedad_jefe-0.00 ***\n\n(0.00)   \n\nN90093       \n\nR20.00    \n\n *** p &lt; 0.001;  ** p &lt; 0.01;  * p &lt; 0.05.\n\n\n\nbroom::glance(modelo0) # ajuste globales de modelo\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic  p.value    df   logLik     AIC    BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n1   0.00232       0.00231 0.744      209. 2.18e-47     1 -101246. 202498. 2.03e5\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\nbroom::tidy(modelo0) # variables\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept) 10.9      0.00836     1298.  0       \n2 edad_jefe   -0.00225  0.000156     -14.5 2.18e-47\n\nanova(modelo0)\n\nAnalysis of Variance Table\n\nResponse: log(ing_cor)\n             Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nedad_jefe     1    116 116.002  209.32 &lt; 2.2e-16 ***\nResiduals 90091  49926   0.554                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nplot(modelo0)\n\n\n\n\n\n\n\n\n\n\n\n\nperformance::check_model(modelo0)"
  },
  {
    "objectID": "P5.html#actividad",
    "href": "P5.html#actividad",
    "title": "5  Regresión lineal - intro",
    "section": "5.5 Actividad",
    "text": "5.5 Actividad\nEstima un modelo donde la variable dependiente sea los ingresos por trabajo “ingtrab”\nAdjunte su código acá https://forms.gle/nTp12UwiqBcfsjf26"
  },
  {
    "objectID": "videos.html#sesión-2-de-septiembre-2024",
    "href": "videos.html#sesión-2-de-septiembre-2024",
    "title": "Videos y extras",
    "section": "Sesión 2 de septiembre 2024",
    "text": "Sesión 2 de septiembre 2024"
  },
  {
    "objectID": "videos.html#sesión-9-de-septiembre-2024",
    "href": "videos.html#sesión-9-de-septiembre-2024",
    "title": "Videos y extras",
    "section": "Sesión 9 de septiembre 2024",
    "text": "Sesión 9 de septiembre 2024"
  },
  {
    "objectID": "videos.html#sesión-30-de-septiembre-2024",
    "href": "videos.html#sesión-30-de-septiembre-2024",
    "title": "Videos y extras",
    "section": "Sesión 30 de septiembre 2024",
    "text": "Sesión 30 de septiembre 2024\n\n\nHicimos trabajo autónomo con los códigos. Checalos en dropbox."
  },
  {
    "objectID": "videos.html#sesión-14-de-octubre-2024",
    "href": "videos.html#sesión-14-de-octubre-2024",
    "title": "Videos y extras",
    "section": "Sesión 14 de octubre 2024",
    "text": "Sesión 14 de octubre 2024"
  },
  {
    "objectID": "videos.html#cheatsheets",
    "href": "videos.html#cheatsheets",
    "title": "Videos y extras",
    "section": "Cheatsheets",
    "text": "Cheatsheets\n{dplyr}"
  },
  {
    "objectID": "videos.html#posit-cloud",
    "href": "videos.html#posit-cloud",
    "title": "Videos y extras",
    "section": "Posit cloud",
    "text": "Posit cloud\nUn pequeño proyecto con los datos de enigh con una muestra por si falla la computadora\nhttps://posit.cloud/content/8880093"
  }
]